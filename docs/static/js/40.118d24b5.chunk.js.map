{"version":3,"sources":["components/FeaturesGroup/index.tsx","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/esm/internal/svg-icons/KeyboardArrowRight.js"],"names":["useStyles","makeStyles","theme","root","padding","link","textDecoration","color","palette","text","primary","linkActive","info","dark","backgroundColor","grey","linkMenu","FeaturesGroup","tabs","classes","parentPath","useResolvedPath","pathname","location","useLocation","React","useState","value","setValue","useEffect","tabIndex","findIndex","tab","path","renderSelectedTabComponent","useCallback","VisualComponent","type","square","className","indicatorColor","textColor","variant","scrollButtons","onChange","_e","newValue","map","i","label","to","component","Link","createSvgIcon","d"],"mappings":"mNAMMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,QAAS,GAEbC,KAAM,CACFC,eAAgB,OAChBC,MAAOL,EAAMM,QAAQC,KAAKC,SAE9BC,WAAY,CACRJ,MAAOL,EAAMM,QAAQI,KAAKC,KAC1B,sBAAuB,CACnBC,gBAAiBZ,EAAMM,QAAQO,KAAK,OAG5CC,SAAU,CACNV,eAAgB,OAChBC,MAAO,WAhBmB,IAqEnBU,UAvCO,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KACfC,EAAUnB,IACEoB,EAAeC,YAAgB,IAAzCC,SACFC,EAAWC,cACjB,EAA0BC,IAAMC,SAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAEAH,IAAMI,WAAU,WAGZ,IAAMC,EAAWZ,EAAKa,WAAU,SAAAC,GAAG,MAAI,UAAGZ,GAAH,OAAgBY,EAAIC,QAAWV,EAASD,QAA5C,IACnCM,GAAuB,IAAdE,EAAkB,EAAIA,EAClC,GAAE,CAACP,EAAUK,EAAUR,EAAYF,IAEpC,IAAMgB,EAA6BC,uBAAY,WAC3C,IAAMC,EAAkBlB,EAAKS,GAAOU,KACpC,OAAO,cAACD,EAAD,GACV,GAAE,CAACT,EAAOT,IAEX,OACI,qCACI,cAAC,IAAD,CAAOoB,QAAM,EAACC,UAAWpB,EAAQhB,KAAjC,SACI,cAAC,IAAD,CACIwB,MAAOA,EACPa,eAAe,UACfC,UAAU,UACVC,QAAQ,aACRC,cAAc,KACdC,SAAU,SAACC,EAAaC,GAAd,OAAmClB,EAASkB,EAA5C,EANd,SAOK5B,EAAK6B,KAAI,SAACf,EAAKgB,GAAN,OACN,cAAC,IAAD,CAAKrB,MAAOqB,EAAWC,MAAOjB,EAAIiB,MAAOC,GAAE,UAAK9B,GAAL,OAAkBY,EAAIC,MAAQkB,UAAWC,KAAhEJ,EADd,QAMjBd,MAGZ,C,mCCzED,mBAMemB,gBAA4B5B,gBAAoB,OAAQ,CACrE6B,EAAG,uDACD,oB,mCCRJ,mBAMeD,gBAA4B5B,gBAAoB,OAAQ,CACrE6B,EAAG,qDACD,qB","file":"static/js/40.118d24b5.chunk.js","sourcesContent":["import { Tab, Tabs } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React, { useCallback } from 'react';\nimport { Link, useLocation, useResolvedPath } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        padding: 0,\n    },\n    link: {\n        textDecoration: 'none',\n        color: theme.palette.text.primary,\n    },\n    linkActive: {\n        color: theme.palette.info.dark,\n        '& .MuiListItem-root': {\n            backgroundColor: theme.palette.grey[300],\n        },\n    },\n    linkMenu: {\n        textDecoration: 'none',\n        color: 'inherit',\n    },\n}));\n\ntype FeatureGroupTab = {\n    type: any;\n    path: string;\n    label: string;\n};\n\nexport type Props = {\n    tabs: FeatureGroupTab[];\n};\n\nconst FeaturesGroup = ({ tabs }: Props) => {\n    const classes = useStyles();\n    const { pathname: parentPath } = useResolvedPath('');\n    const location = useLocation();\n    const [value, setValue] = React.useState(0);\n\n    React.useEffect(() => {\n        // Because of the following issue, Suspense is breaking the tab selection (fix will be part of React 18)\n        // https://github.com/mui-org/material-ui/issues/14077\n        const tabIndex = tabs.findIndex(tab => `${parentPath}${tab.path}` === location.pathname);\n        setValue(tabIndex === -1 ? 0 : tabIndex);\n    }, [location, setValue, parentPath, tabs]);\n\n    const renderSelectedTabComponent = useCallback(() => {\n        const VisualComponent = tabs[value].type;\n        return <VisualComponent />;\n    }, [value, tabs]);\n\n    return (\n        <>\n            <Paper square className={classes.root}>\n                <Tabs\n                    value={value}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    variant=\"scrollable\"\n                    scrollButtons=\"on\"\n                    onChange={(_e: unknown, newValue: number) => setValue(newValue)}>\n                    {tabs.map((tab, i) => (\n                        <Tab value={i} key={i} label={tab.label} to={`${parentPath}${tab.path}`} component={Link} />\n                    ))}\n                </Tabs>\n            </Paper>\n\n            {renderSelectedTabComponent()}\n        </>\n    );\n};\n\nexport default FeaturesGroup;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');"],"sourceRoot":""}