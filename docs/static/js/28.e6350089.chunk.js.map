{"version":3,"sources":["services/encodings.ts","containers/CSVParser/services.ts","containers/CSVParser/styled.ts","containers/CSVParser/index.tsx","components/FeatureTitle/index.tsx","components/CopyButton/index.tsx","hooks/useSyntaxHighlightTheme.ts","services/file-utils.ts"],"names":["FILE_ENCODING_LABELS_SORTED","encodings","labels","name","heading","flatMap","entry","encoding","map","label","sort","a","b","DEFAULT_OPTIONS","delimiter","newline","undefined","quoteChar","escapeChar","header","transformHeader","index","trim","dynamicTyping","preview","worker","comments","step","complete","error","download","downloadRequestHeaders","downloadRequestBody","skipEmptyLines","chunk","chunkSize","fastMode","beforeFirstChunk","withCredentials","transform","delimitersToGuess","Papa","RECORD_SEP","UNIT_SEP","csvData","options","csvOptions","_index","parse","useStyles","makeStyles","theme","root","margin","spacing","fileSelector","textAlign","formControl","marginLeft","marginRight","minWidth","inputField","fontFamily","fontSize","whiteSpace","overflowY","toolbar","padding","encodedResult","borderColor","palette","text","disabled","borderStyle","borderWidth","borderRadius","shape","wordBreak","mapStateToProps","state","inputText","textInputs","inputEncoding","inputOptions","mapDispatchToProps","dispatch","storeInputText","value","setTextAction","connect","withWidth","props","title","classes","syntaxTheme","useSyntaxHighlightTheme","React","useState","transformed","setTransformed","rawParsedResult","setRawParsedResult","fileInfo","setFileInfo","isRunning","setIsRunning","isMdUp","isWidthUp","width","displayedRowsCount","useEffect","opts","JSON","services","result","stringify","data","Helmet","className","FeatureTitle","iconType","CSVParserIcon","Toolbar","Box","display","flexGrow","type","color","accept","onChange","e","target","files","length","file","reader","FileReader","onload","ev","prettyBytes","size","find","enc","readAsText","onFileSelected","id","style","htmlFor","Button","variant","component","FormControl","InputLabel","shrink","Select","labelId","autoFocus","item","MenuItem","FormHelperText","noValidate","autoComplete","Grid","container","md","sm","xs","TextField","helperText","multiline","minRows","maxRows","inputProps","fullWidth","Link","rel","href","endIcon","onClick","event","preventDefault","CopyButton","fileService","Typography","language","titleWithIcon","alignItems","titleContainer","justifyContent","icon","height","FeatureIcon","hoverMessage","feedbackMessage","Icon","AssignmentTurnedIn","setToasterState","useToasterUpdate","message","substring","copy","format","open","autoHideDuration","usePreferenceTheme","isDark","dark","docco","saveJsonAs","jsonContent","window","require","ipcRenderer","send","blob","Blob","saveAs"],"mappings":"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","file":"static/js/28.e6350089.chunk.js","sourcesContent":["export const FILE_ENCODING_ENTRIES = [\n    {\n        encodings: [\n            {\n                labels: ['unicode-1-1-utf-8', 'unicode11utf8', 'unicode20utf8', 'utf-8', 'utf8', 'x-unicode20utf8'],\n                name: 'UTF-8',\n            },\n        ],\n        heading: 'The Encoding',\n    },\n    {\n        encodings: [\n            {\n                labels: ['866', 'cp866', 'csibm866', 'ibm866'],\n                name: 'IBM866',\n            },\n            {\n                labels: [\n                    'csisolatin2',\n                    'iso-8859-2',\n                    'iso-ir-101',\n                    'iso8859-2',\n                    'iso88592',\n                    'iso_8859-2',\n                    'iso_8859-2:1987',\n                    'l2',\n                    'latin2',\n                ],\n                name: 'ISO-8859-2',\n            },\n            {\n                labels: [\n                    'csisolatin3',\n                    'iso-8859-3',\n                    'iso-ir-109',\n                    'iso8859-3',\n                    'iso88593',\n                    'iso_8859-3',\n                    'iso_8859-3:1988',\n                    'l3',\n                    'latin3',\n                ],\n                name: 'ISO-8859-3',\n            },\n            {\n                labels: [\n                    'csisolatin4',\n                    'iso-8859-4',\n                    'iso-ir-110',\n                    'iso8859-4',\n                    'iso88594',\n                    'iso_8859-4',\n                    'iso_8859-4:1988',\n                    'l4',\n                    'latin4',\n                ],\n                name: 'ISO-8859-4',\n            },\n            {\n                labels: [\n                    'csisolatincyrillic',\n                    'cyrillic',\n                    'iso-8859-5',\n                    'iso-ir-144',\n                    'iso8859-5',\n                    'iso88595',\n                    'iso_8859-5',\n                    'iso_8859-5:1988',\n                ],\n                name: 'ISO-8859-5',\n            },\n            {\n                labels: [\n                    'arabic',\n                    'asmo-708',\n                    'csiso88596e',\n                    'csiso88596i',\n                    'csisolatinarabic',\n                    'ecma-114',\n                    'iso-8859-6',\n                    'iso-8859-6-e',\n                    'iso-8859-6-i',\n                    'iso-ir-127',\n                    'iso8859-6',\n                    'iso88596',\n                    'iso_8859-6',\n                    'iso_8859-6:1987',\n                ],\n                name: 'ISO-8859-6',\n            },\n            {\n                labels: [\n                    'csisolatingreek',\n                    'ecma-118',\n                    'elot_928',\n                    'greek',\n                    'greek8',\n                    'iso-8859-7',\n                    'iso-ir-126',\n                    'iso8859-7',\n                    'iso88597',\n                    'iso_8859-7',\n                    'iso_8859-7:1987',\n                    'sun_eu_greek',\n                ],\n                name: 'ISO-8859-7',\n            },\n            {\n                labels: [\n                    'csiso88598e',\n                    'csisolatinhebrew',\n                    'hebrew',\n                    'iso-8859-8',\n                    'iso-8859-8-e',\n                    'iso-ir-138',\n                    'iso8859-8',\n                    'iso88598',\n                    'iso_8859-8',\n                    'iso_8859-8:1988',\n                    'visual',\n                ],\n                name: 'ISO-8859-8',\n            },\n            {\n                labels: ['csiso88598i', 'iso-8859-8-i', 'logical'],\n                name: 'ISO-8859-8-I',\n            },\n            {\n                labels: ['csisolatin6', 'iso-8859-10', 'iso-ir-157', 'iso8859-10', 'iso885910', 'l6', 'latin6'],\n                name: 'ISO-8859-10',\n            },\n            {\n                labels: ['iso-8859-13', 'iso8859-13', 'iso885913'],\n                name: 'ISO-8859-13',\n            },\n            {\n                labels: ['iso-8859-14', 'iso8859-14', 'iso885914'],\n                name: 'ISO-8859-14',\n            },\n            {\n                labels: ['csisolatin9', 'iso-8859-15', 'iso8859-15', 'iso885915', 'iso_8859-15', 'l9'],\n                name: 'ISO-8859-15',\n            },\n            {\n                labels: ['iso-8859-16'],\n                name: 'ISO-8859-16',\n            },\n            {\n                labels: ['cskoi8r', 'koi', 'koi8', 'koi8-r', 'koi8_r'],\n                name: 'KOI8-R',\n            },\n            {\n                labels: ['koi8-ru', 'koi8-u'],\n                name: 'KOI8-U',\n            },\n            {\n                labels: ['csmacintosh', 'mac', 'macintosh', 'x-mac-roman'],\n                name: 'macintosh',\n            },\n            {\n                labels: ['dos-874', 'iso-8859-11', 'iso8859-11', 'iso885911', 'tis-620', 'windows-874'],\n                name: 'windows-874',\n            },\n            {\n                labels: ['cp1250', 'windows-1250', 'x-cp1250'],\n                name: 'windows-1250',\n            },\n            {\n                labels: ['cp1251', 'windows-1251', 'x-cp1251'],\n                name: 'windows-1251',\n            },\n            {\n                labels: [\n                    'ansi_x3.4-1968',\n                    'ascii',\n                    'cp1252',\n                    'cp819',\n                    'csisolatin1',\n                    'ibm819',\n                    'iso-8859-1',\n                    'iso-ir-100',\n                    'iso8859-1',\n                    'iso88591',\n                    'iso_8859-1',\n                    'iso_8859-1:1987',\n                    'l1',\n                    'latin1',\n                    'us-ascii',\n                    'windows-1252',\n                    'x-cp1252',\n                ],\n                name: 'windows-1252',\n            },\n            {\n                labels: ['cp1253', 'windows-1253', 'x-cp1253'],\n                name: 'windows-1253',\n            },\n            {\n                labels: [\n                    'cp1254',\n                    'csisolatin5',\n                    'iso-8859-9',\n                    'iso-ir-148',\n                    'iso8859-9',\n                    'iso88599',\n                    'iso_8859-9',\n                    'iso_8859-9:1989',\n                    'l5',\n                    'latin5',\n                    'windows-1254',\n                    'x-cp1254',\n                ],\n                name: 'windows-1254',\n            },\n            {\n                labels: ['cp1255', 'windows-1255', 'x-cp1255'],\n                name: 'windows-1255',\n            },\n            {\n                labels: ['cp1256', 'windows-1256', 'x-cp1256'],\n                name: 'windows-1256',\n            },\n            {\n                labels: ['cp1257', 'windows-1257', 'x-cp1257'],\n                name: 'windows-1257',\n            },\n            {\n                labels: ['cp1258', 'windows-1258', 'x-cp1258'],\n                name: 'windows-1258',\n            },\n            {\n                labels: ['x-mac-cyrillic', 'x-mac-ukrainian'],\n                name: 'x-mac-cyrillic',\n            },\n        ],\n        heading: 'Legacy single-byte encodings',\n    },\n    {\n        encodings: [\n            {\n                labels: [\n                    'chinese',\n                    'csgb2312',\n                    'csiso58gb231280',\n                    'gb2312',\n                    'gb_2312',\n                    'gb_2312-80',\n                    'gbk',\n                    'iso-ir-58',\n                    'x-gbk',\n                ],\n                name: 'GBK',\n            },\n            {\n                labels: ['gb18030'],\n                name: 'gb18030',\n            },\n        ],\n        heading: 'Legacy multi-byte Chinese (simplified) encodings',\n    },\n    {\n        encodings: [\n            {\n                labels: ['big5', 'big5-hkscs', 'cn-big5', 'csbig5', 'x-x-big5'],\n                name: 'Big5',\n            },\n        ],\n        heading: 'Legacy multi-byte Chinese (traditional) encodings',\n    },\n    {\n        encodings: [\n            {\n                labels: ['cseucpkdfmtjapanese', 'euc-jp', 'x-euc-jp'],\n                name: 'EUC-JP',\n            },\n            {\n                labels: ['csiso2022jp', 'iso-2022-jp'],\n                name: 'ISO-2022-JP',\n            },\n            {\n                labels: ['csshiftjis', 'ms932', 'ms_kanji', 'shift-jis', 'shift_jis', 'sjis', 'windows-31j', 'x-sjis'],\n                name: 'Shift_JIS',\n            },\n        ],\n        heading: 'Legacy multi-byte Japanese encodings',\n    },\n    {\n        encodings: [\n            {\n                labels: [\n                    'cseuckr',\n                    'csksc56011987',\n                    'euc-kr',\n                    'iso-ir-149',\n                    'korean',\n                    'ks_c_5601-1987',\n                    'ks_c_5601-1989',\n                    'ksc5601',\n                    'ksc_5601',\n                    'windows-949',\n                ],\n                name: 'EUC-KR',\n            },\n        ],\n        heading: 'Legacy multi-byte Korean encodings',\n    },\n    {\n        encodings: [\n            {\n                labels: ['csiso2022kr', 'hz-gb-2312', 'iso-2022-cn', 'iso-2022-cn-ext', 'iso-2022-kr', 'replacement'],\n                name: 'replacement',\n            },\n            {\n                labels: ['unicodefffe', 'utf-16be'],\n                name: 'UTF-16BE',\n            },\n            {\n                labels: ['csunicode', 'iso-10646-ucs-2', 'ucs-2', 'unicode', 'unicodefeff', 'utf-16', 'utf-16le'],\n                name: 'UTF-16LE',\n            },\n            {\n                labels: ['x-user-defined'],\n                name: 'x-user-defined',\n            },\n        ],\n        heading: 'Legacy miscellaneous encodings',\n    },\n];\n\nexport type LabelAndName = {\n    label: string;\n    name: string;\n};\n\n/**\n * Sorted Map of each label to its normalized name: encoding.labels -> encoding.name :\n * [\n *  {\"label\":\"866\",\"name\":\"IBM866\"},\n *  {\"label\":\"ansi_x3.4-1968\",\"name\":\"windows-1252\"},\n *  {\"label\":\"arabic\",\"name\":\"ISO-8859-6\"},\n *  {\"label\":\"ascii\",\"name\":\"windows-1252\"},\n *  {\"label\":\"asmo-708\",\"name\":\"ISO-8859-6\"},\n *  ...\n * ]\n */\nexport const FILE_ENCODING_LABELS_SORTED: LabelAndName[] = FILE_ENCODING_ENTRIES.flatMap(entry =>\n    entry.encodings.flatMap(encoding =>\n        encoding.labels.map(label => ({\n            label,\n            name: encoding.name,\n        })),\n    ),\n).sort((a: LabelAndName, b: LabelAndName) => (a.label < b.label ? -1 : 1));\n","import Papa, { ParseConfig, ParseResult } from 'papaparse';\n\nexport const DEFAULT_OPTIONS: any = {\n    delimiter: '', // auto-detect\n    newline: undefined, // auto-detect\n    quoteChar: '\"',\n    escapeChar: '\"',\n    header: true,\n    transformHeader: (header: string, index: number) => header?.trim(),\n    dynamicTyping: true,\n    preview: 0,\n    encoding: undefined,\n    worker: false,\n    comments: false,\n    step: undefined,\n    complete: undefined,\n    error: undefined,\n    download: false,\n    downloadRequestHeaders: undefined,\n    downloadRequestBody: undefined,\n    skipEmptyLines: true,\n    chunk: undefined,\n    chunkSize: undefined,\n    fastMode: undefined,\n    beforeFirstChunk: undefined,\n    withCredentials: undefined,\n    transform: undefined,\n    delimitersToGuess: [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP],\n};\n\nexport const OPTIONS_DOC_URL = 'https://www.papaparse.com/docs#config';\n\ntype ParseConfigType = ParseConfig<any> & { download?: false | undefined; worker?: false | undefined };\n\n// @see https://www.papaparse.com/docs#config\nexport async function transform(\n    csvData: string,\n    options: ParseConfigType = DEFAULT_OPTIONS,\n): Promise<ParseResult<any>> {\n    const csvOptions = {\n        ...options,\n        transformHeader: (header: string, _index: number) => header?.trim(),\n    };\n\n    return Papa.parse(csvData, csvOptions);\n}\n","import { makeStyles } from '@material-ui/core';\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    fileSelector: {\n        margin: theme.spacing(2),\n        textAlign: 'center',\n    },\n    formControl: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        minWidth: 120,\n    },\n    inputField: {\n        fontFamily: 'monospace',\n        fontSize: '0.8em',\n        whiteSpace: 'nowrap',\n        overflowY: 'scroll',\n    },\n    toolbar: {\n        margin: 0,\n        padding: 0,\n        '& > *': {\n            marginLeft: theme.spacing(1),\n        },\n    },\n    encodedResult: {\n        padding: theme.spacing(1),\n        borderColor: theme.palette.text.disabled,\n        borderStyle: 'solid',\n        borderWidth: 1,\n        borderRadius: theme.shape.borderRadius,\n        whiteSpace: 'normal',\n        wordBreak: 'break-word',\n    },\n}));\n","import {\n    Box,\n    FormControl,\n    FormHelperText,\n    Grid,\n    InputLabel,\n    isWidthUp,\n    Link,\n    MenuItem,\n    Select,\n    TextField,\n    Toolbar,\n    Typography,\n    withWidth,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport FileIcon from '@material-ui/icons/AttachmentOutlined';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CSVParserIcon from '@material-ui/icons/GridOn';\nimport SaveIcon from '@material-ui/icons/Save';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { Dispatch } from 'redux';\nimport { setTextAction } from '../../actions/text-actions';\nimport CopyButton from '../../components/CopyButton';\nimport FeatureTitle from '../../components/FeatureTitle';\nimport { useSyntaxHighlightTheme } from '../../hooks/useSyntaxHighlightTheme';\nimport { AppState } from '../../reducers';\nimport { FILE_ENCODING_LABELS_SORTED, LabelAndName } from '../../services/encodings';\nimport * as fileService from '../../services/file-utils';\nimport * as services from './services';\nimport { useStyles } from './styled';\nimport prettyBytes from 'pretty-bytes';\n\ninterface Props {\n    width: Breakpoint;\n    inputText?: string;\n    inputEncoding?: string;\n    inputOptions?: string;\n    storeInputText: (name: string, value: string) => void;\n}\n\nconst CSVParser: React.FC<Props> = (props: Props) => {\n    const title = 'CSV parser';\n    const classes = useStyles();\n    const syntaxTheme = useSyntaxHighlightTheme();\n    const { inputText, inputEncoding, inputOptions, storeInputText } = props;\n    const [transformed, setTransformed] = React.useState('');\n    const [rawParsedResult, setRawParsedResult] = React.useState('');\n    const [fileInfo, setFileInfo] = React.useState('');\n    const [isRunning, setIsRunning] = React.useState(false);\n    const isMdUp = isWidthUp('md', props.width);\n    const displayedRowsCount = isMdUp ? 10 : 4;\n\n    const handleSaveAs = (event: any) => {\n        event.preventDefault();\n        fileService.saveJsonAs(transformed);\n    };\n\n    function handleClear(event: any) {\n        event.preventDefault();\n        setTransformed('');\n        setRawParsedResult('');\n        setFileInfo('');\n        storeInputText('lastCSVInputContent', '');\n    }\n\n    function onFileSelected(e: React.ChangeEvent<HTMLInputElement>) {\n        if (!e?.target?.files || e.target.files.length === 0) {\n            return;\n        }\n\n        const file = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = (ev: ProgressEvent<FileReader>) => {\n            storeInputText('lastCSVInputContent', ev.target!.result as string);\n            setFileInfo(`${file.name} (${prettyBytes(file.size)})`);\n            e.target.value = '';\n        };\n        const encoding: LabelAndName = FILE_ENCODING_LABELS_SORTED.find(enc => enc.label === inputEncoding)!;\n        reader.readAsText(file, encoding?.name ?? 'utf-8');\n    }\n\n    React.useEffect(() => {\n        async function parse() {\n            try {\n                const opts = inputOptions ? JSON.parse(inputOptions) : services.DEFAULT_OPTIONS;\n                const result = await services.transform(inputText!, opts);\n                setTransformed(JSON.stringify(result.data, null, 2));\n                setRawParsedResult(JSON.stringify(result, null, 2));\n                storeInputText('lastCSVInputOptions', JSON.stringify(opts, null, 2));\n                setIsRunning(false);\n            } catch (e) {\n                setIsRunning(false);\n            }\n        }\n\n        if (isRunning && inputText) {\n            parse();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [isRunning, inputText]);\n\n    return (\n        <>\n            <Helmet title={title} />\n            <div className={classes.root}>\n                <FeatureTitle iconType={CSVParserIcon} title={title} />\n\n                <Toolbar className={classes.toolbar}>\n                    <Box display=\"flex\" flexGrow={1}></Box>\n                    <div>\n                        <input\n                            type=\"file\"\n                            color=\"primary\"\n                            accept=\"text/csv\"\n                            onChange={e => onFileSelected(e)}\n                            id=\"icon-button-file\"\n                            style={{ display: 'none' }}\n                        />\n                        <label htmlFor=\"icon-button-file\">\n                            <Button variant=\"contained\" component=\"span\" color=\"primary\">\n                                File &nbsp; <FileIcon />\n                            </Button>\n                        </label>\n                    </div>\n\n                    <FormControl className={classes.formControl}>\n                        <InputLabel shrink id=\"encodingLabel\">\n                            Encoding\n                        </InputLabel>\n                        <Select\n                            labelId=\"encodingLabel\"\n                            id=\"encoding\"\n                            value={inputEncoding}\n                            autoFocus={isMdUp}\n                            onChange={(e: any) => storeInputText('lastCSVInputContentEncoding', e.target.value)}>\n                            {FILE_ENCODING_LABELS_SORTED.map((item, index) => (\n                                <MenuItem key={`${index}-${item.label}`} value={item.label}>\n                                    {item.label} ({item.name})\n                                </MenuItem>\n                            ))}\n                        </Select>\n                        <FormHelperText>Specify the file encoding</FormHelperText>\n                    </FormControl>\n                </Toolbar>\n\n                <form noValidate autoComplete=\"off\">\n                    <Grid container spacing={1}>\n                        <Grid item md={8} sm={12} xs={12}>\n                            <TextField\n                                name=\"inputText\"\n                                label=\"CSV Source data\"\n                                helperText={fileInfo}\n                                multiline\n                                minRows={displayedRowsCount}\n                                maxRows={displayedRowsCount}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                inputProps={{\n                                    style: {\n                                        fontFamily: 'monospace',\n                                        fontSize: '0.8em',\n                                        whiteSpace: 'nowrap',\n                                        overflowY: 'scroll',\n                                    },\n                                }}\n                                fullWidth={true}\n                                value={inputText}\n                                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                                    storeInputText('lastCSVInputContent', e.target.value)\n                                }\n                            />\n                        </Grid>\n                        <Grid item md={4} sm={12} xs={12}>\n                            <TextField\n                                name=\"inputOptions\"\n                                label=\"Parser options\"\n                                helperText={\n                                    <Link target=\"_blank\" rel=\"noreferrer\" href={services.OPTIONS_DOC_URL}>\n                                        Options documentation available here!\n                                    </Link>\n                                }\n                                multiline\n                                minRows={displayedRowsCount}\n                                maxRows={displayedRowsCount}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                inputProps={{\n                                    style: {\n                                        fontFamily: 'monospace',\n                                        fontSize: '0.8em',\n                                        whiteSpace: 'nowrap',\n                                        overflowY: 'scroll',\n                                    },\n                                }}\n                                fullWidth={true}\n                                value={inputOptions}\n                                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                                    storeInputText('lastCSVInputOptions', e.target.value)\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                </form>\n\n                <Toolbar className={classes.toolbar}>\n                    <Box display=\"flex\" flexGrow={1}></Box>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        endIcon={<AccountTreeIcon>Run</AccountTreeIcon>}\n                        disabled={!inputText || isRunning}\n                        onClick={() => setIsRunning(true)}>\n                        {isRunning ? 'Wait…' : 'Run'}\n                    </Button>\n                    <Button variant=\"contained\" color=\"primary\" disabled={!inputText} onClick={handleClear}>\n                        <DeleteIcon />\n                    </Button>\n                    <CopyButton data={transformed} />\n                    <Button\n                        endIcon={<SaveIcon>Save As...</SaveIcon>}\n                        disabled={!transformed}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleSaveAs}>\n                        Save…\n                    </Button>\n                </Toolbar>\n\n                {transformed && (\n                    <>\n                        <Typography>Parsed rows:</Typography>\n                        <SyntaxHighlighter style={syntaxTheme} language=\"json\" className={classes.encodedResult}>\n                            {transformed}\n                        </SyntaxHighlighter>\n                        <Typography>Parsed result with metadata:</Typography>\n                        <SyntaxHighlighter style={syntaxTheme} language=\"json\" className={classes.encodedResult}>\n                            {rawParsedResult}\n                        </SyntaxHighlighter>\n                    </>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport function mapStateToProps(state: AppState) {\n    return {\n        inputText: state.textInputs['lastCSVInputContent'],\n        inputEncoding: state.textInputs['lastCSVInputContentEncoding'],\n        inputOptions: state.textInputs['lastCSVInputOptions'],\n    };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        storeInputText: (name: string, value: string) => dispatch(setTextAction(name, value)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(CSVParser));\n","import { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        wordBreak: 'break-word',\n    },\n    titleWithIcon: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    titleContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        height: '40px',\n        width: '40px',\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Props {\n    title: string;\n    iconType: any;\n}\n\nconst FeatureTitle: React.FC<Props> = (props: Props) => {\n    const classes = useStyles();\n    const FeatureIcon = props.iconType;\n\n    return (\n        <div className={classes.titleContainer}>\n            <div className={classes.titleWithIcon}>\n                <FeatureIcon className={classes.icon} />\n                <Typography variant=\"h5\" className={classes.title}>\n                    {props.title}\n                </Typography>\n            </div>\n        </div>\n    );\n};\n\nexport default FeatureTitle;\n","import { Button, SvgIconTypeMap } from '@material-ui/core';\nimport { OverridableComponent } from '@material-ui/core/OverridableComponent';\nimport AssignmentTurnedIn from '@material-ui/icons/AssignmentTurnedIn';\nimport * as copy from 'copy-to-clipboard';\nimport React from 'react';\nimport { useToasterUpdate } from '../Toaster/ToasterProvider';\n\ninterface Props {\n    data?: string;\n    hoverMessage?: string;\n    feedbackMessage?: string;\n    Icon?: OverridableComponent<SvgIconTypeMap<unknown, 'svg'>>;\n}\n\nconst CopyButton: React.FC<Props> = ({ data, hoverMessage, feedbackMessage, Icon = AssignmentTurnedIn }: Props) => {\n    const { setToasterState } = useToasterUpdate();\n\n    const handleCopy = () => {\n        if (!data) {\n            return;\n        }\n\n        const message = feedbackMessage ?? `Content copied into clipboard: ${data.substring(0, 25)} …`;\n\n        copy.default(data, { format: 'text/plain' });\n        setToasterState({ open: true, message, type: 'success', autoHideDuration: 2000 });\n    };\n\n    return (\n        <Button\n            onClick={handleCopy}\n            disabled={!data}\n            title={hoverMessage ?? 'Copy to clipboard'}\n            variant=\"contained\"\n            color=\"primary\">\n            <Icon />\n        </Button>\n    );\n};\n\nexport default CopyButton;\n","import { usePreferenceTheme } from '../components/Preferences/PreferencesProvider';\nimport { docco, dark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nexport const useSyntaxHighlightTheme = () => {\n    const { isDark } = usePreferenceTheme();\n\n    return isDark ? dark : docco;\n};\n","import { saveAs } from 'file-saver';\n\nexport function saveJsonAs(jsonContent: string): void {\n    // Will be defined if the React App is running inside Electron\n    if (window.require) {\n        const ipc = window.require('electron').ipcRenderer;\n        ipc.send('saveJsonAs', jsonContent);\n    } else {\n        const blob = new Blob([jsonContent], { type: 'application/json' });\n        saveAs(blob, 'data.json');\n    }\n}\n"],"sourceRoot":""}