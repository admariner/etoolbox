{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/v4.js","containers/UUIDGenerator/services.ts","containers/UUIDGenerator/index.tsx"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","_nodeId","_clockseq","arr","offset","arguments","length","undefined","toLowerCase","TypeError","_lastMSecs","_lastNSecs","v1","options","buf","b","Array","node","clockseq","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","v4","rnds","generate","version","quantity","uuidGenerator","result","slice","useStyles","makeStyles","theme","root","margin","spacing","form","marginTop","formControl","toolbar","marginLeft","withWidth","props","title","classes","useForm","defaultValues","handleSubmit","control","React","useState","services","generated","setGenerated","Helmet","className","FeatureTitle","iconType","SimCardIcon","Grid","container","item","md","sm","xs","FormControl","InputLabel","id","name","defaultValue","render","field","value","onChange","Select","labelId","autoFocus","isWidthUp","width","e","target","MenuItem","rules","required","min","max","FormHelperText","fieldState","invalid","error","TextField","label","type","helperText","justifyContent","CopyButton","data","Button","variant","color","onClick","endIcon","ResultMonospace"],"mappings":"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","file":"static/js/23.147b951d.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v1, v4 } from 'uuid';\n\nexport function generate(version: number, quantity: number): string {\n    const uuidGenerator = version === 1 ? v1 : v4;\n\n    let result = '';\n    for (let i = 0; i < quantity; i++) {\n        result += `${uuidGenerator()}\\n`;\n    }\n\n    // Return result without last line feed\n    return result.slice(0, -1);\n}\n","import { FormControl, FormHelperText, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport SimCardIcon from '@material-ui/icons/SimCard';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Controller, useForm } from 'react-hook-form';\nimport CopyButton from '../../components/CopyButton';\nimport FeatureTitle from '../../components/FeatureTitle';\nimport ResultMonospace from '../../components/ResultMonospace';\nimport * as services from './services';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    form: {\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n    },\n    toolbar: {\n        '& > *': {\n            marginLeft: theme.spacing(1),\n            marginTop: theme.spacing(1),\n        },\n    },\n}));\n\ninterface UUIDForm {\n    version: number;\n    quantity: number;\n}\n\ninterface Props {\n    width: Breakpoint;\n}\n\nconst UUIDGenerator: React.FC<Props> = (props: Props) => {\n    const title = 'UUID Generator';\n    const classes = useStyles();\n    const defaultValues = {\n        version: 4,\n        quantity: 5,\n    };\n    const { handleSubmit, control } = useForm({ defaultValues });\n    const [generated, setGenerated] = React.useState(services.generate(4, 1));\n\n    const onSubmit = (data: UUIDForm) => {\n        setGenerated(services.generate(data.version, data.quantity));\n    };\n\n    return (\n        <>\n            <Helmet title={title} />\n            <div className={classes.root}>\n                <FeatureTitle iconType={SimCardIcon} title={title} />\n\n                <div className={classes.form}>\n                    <Grid container spacing={1}>\n                        <Grid item md={2} sm={3} xs={6}>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel id=\"uuidVersionLabel\">Version</InputLabel>\n                                <Controller\n                                    control={control}\n                                    name=\"version\"\n                                    defaultValue={4}\n                                    render={({field: { value, name, onChange }}) => (\n                                        <Select name={name} value={value} labelId=\"uuidVersionLabel\" autoFocus={isWidthUp('md', props.width)} \n                                            onChange={e => onChange(e.target.value)}>\n                                            <MenuItem value={1}>1</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                        </Select>\n                                    )}\n                                    rules={{\n                                        required: true,\n                                        min: 1,\n                                        max: 5,\n                                    }}\n                                />\n                                <FormHelperText>RFC4122 version</FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item md={2} sm={3} xs={6}>\n                            <FormControl className={classes.formControl}>\n                                <Controller\n                                    name=\"quantity\"\n                                    render={({\n                                        field: { value, name, onChange },\n                                        fieldState: { invalid, error },\n                                    }) => (\n                                        <TextField name={name} value={value} label=\"Quantity\" error={invalid} type=\"number\"\n                                            onChange={e => onChange(e.target.value)}\n                                            helperText={invalid ? 'valid range: [1..9999]' : null} />\n                                    )}\n                                    control={control}\n                                    defaultValue={5}\n                                    rules={{\n                                        required: true,\n                                        min: 1,\n                                        max: 9999,\n                                    }}\n                                />\n                                <FormHelperText>Number of UUIDs</FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item md={8} sm={6} xs={12}>\n                            <Grid container justifyContent=\"flex-end\" className={classes.toolbar}>\n                                <CopyButton data={generated} />\n                                <Button variant=\"contained\" color=\"primary\"\n                                    onClick={handleSubmit(onSubmit)}\n                                    endIcon={<SimCardIcon />}>Generate</Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n\n                <ResultMonospace label=\"Result\" result={generated} />\n            </div>\n        </>\n    );\n}\n\nexport default withWidth()(UUIDGenerator);\n"],"sourceRoot":""}