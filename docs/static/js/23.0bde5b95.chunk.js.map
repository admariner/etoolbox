{"version":3,"sources":["containers/JSONFormatter/services.ts","containers/JSONFormatter/index.tsx","components/FeatureTitle/index.tsx","components/CopyButton/index.tsx","hooks/useSyntaxHighlightTheme.ts","services/file-utils.ts","../../src/FileSaver.js","../node_modules/@mui/icons-material/Save.js"],"names":["replacer","_key","value","Object","Array","keys","sort","reduce","sorted","key","useStyles","makeStyles","theme","root","margin","spacing","formatted","borderColor","palette","text","disabled","borderStyle","borderWidth","borderRadius","shape","maxHeight","width","overflow","toolbar","padding","mapStateToProps","state","inputText","textInputs","mapDispatchToProps","dispatch","storeInputText","name","setTextAction","connect","props","title","classes","isMdUp","useIsWidthUp","syntaxTheme","useSyntaxHighlightTheme","React","useState","setFormatted","useEffect","obj","JSON","parse","stringify","e","services","Helmet","className","FeatureTitle","iconType","WrapTextIcon","noValidate","autoComplete","TextField","autoFocus","label","placeholder","multiline","minRows","maxRows","variant","fullWidth","onChange","target","Toolbar","Box","display","flexGrow","CopyButton","data","sx","mr","Button","endIcon","color","onClick","event","preventDefault","fileService","style","language","wordBreak","titleWithIcon","alignItems","titleContainer","justifyContent","icon","height","marginRight","FeatureIcon","isDisabled","hoverMessage","feedbackMessage","Icon","AssignmentTurnedIn","others","setToasterState","useToasterUpdate","message","substring","copy","format","open","type","autoHideDuration","usePreferenceTheme","isDark","dark","docco","saveJsonAs","jsonContent","window","require","ipcRenderer","send","blob","Blob","saveAs","b","autoBom","console","warn","test","XMLHttpRequest","responseType","onload","response","onerror","error","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","self","global","navigator","userAgent","HTMLAnchorElement","prototype","URL","webkitURL","createElement","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","body","innerText","i","HTMLElement","safari","FileReader","onloadend","result","replace","readAsDataURL","module","exports","_interopRequireDefault","defineProperty","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/23.0bde5b95.chunk.js","sourcesContent":["// Spec http://www.ecma-international.org/ecma-262/6.0/#sec-json.stringify\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst replacer = (_key: string, value: any) =>\n  value instanceof Object && !(value instanceof Array)\n    ? Object.keys(value)\n        .sort()\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        .reduce((sorted: any, key: string) => {\n          sorted[key] = value[key];\n          return sorted;\n        }, {})\n    : value;\n\nexport function formatJson(value?: string): string {\n  if (!value) {\n    return '';\n  }\n\n  try {\n    const obj = JSON.parse(value);\n    return JSON.stringify(obj, replacer, 4);\n  } catch (e) {\n    //  do nothing user may still be typing...\n    return value;\n  }\n}\n","import React from 'react';\n\nimport SaveIcon from '@mui/icons-material/Save';\nimport WrapTextIcon from '@mui/icons-material/WrapText';\nimport { Box, Toolbar } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport { makeStyles } from '@mui/styles';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { Dispatch } from 'redux';\n\nimport { setTextAction } from '../../actions/text-actions';\nimport CopyButton from '../../components/CopyButton';\nimport FeatureTitle from '../../components/FeatureTitle';\nimport { useSyntaxHighlightTheme } from '../../hooks/useSyntaxHighlightTheme';\nimport { AppState } from '../../reducers';\nimport * as fileService from '../../services/file-utils';\nimport { useIsWidthUp } from '../../theme';\nimport * as services from './services';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n  formatted: {\n    borderColor: theme.palette.text.disabled,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderRadius: theme.shape.borderRadius,\n    maxHeight: '500px',\n    width: '100%',\n    overflow: 'auto',\n  },\n  toolbar: {\n    margin: 0,\n    padding: 0,\n  },\n}));\n\ninterface Props {\n  inputText?: string;\n  storeInputText: (name: string, value: string) => void;\n}\n\nconst JSONFormatter: React.FC<Props> = (props: Props) => {\n  const title = 'JSON Formatter';\n  const classes = useStyles();\n  const isMdUp = useIsWidthUp('md');\n  const syntaxTheme = useSyntaxHighlightTheme();\n  const { inputText, storeInputText } = props;\n  const [formatted, setFormatted] = React.useState('');\n\n  React.useEffect(() => {\n    setFormatted(services.formatJson(inputText));\n  }, [inputText]);\n\n  const handleSaveAs = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    fileService.saveJsonAs(formatted);\n  };\n\n  return (\n    <>\n      <Helmet title={title} />\n      <div className={classes.root}>\n        <FeatureTitle iconType={WrapTextIcon} title={title} />\n\n        <form noValidate autoComplete=\"off\">\n          <div>\n            <TextField\n              autoFocus={isMdUp}\n              label=\"JSON Content\"\n              placeholder=\"Paste or type the json content here\"\n              multiline\n              minRows={10}\n              maxRows={isMdUp ? 20 : 10}\n              variant=\"outlined\"\n              margin=\"normal\"\n              fullWidth={true}\n              value={inputText}\n              onChange={e => storeInputText('lastJSONFormatterValue', e.target.value)}\n            />\n          </div>\n        </form>\n\n        <Toolbar className={classes.toolbar}>\n          <Box display=\"flex\" flexGrow={1}></Box>\n          <CopyButton data={formatted} sx={{ mr: 1 }} />\n          <Button\n            endIcon={<SaveIcon>Save As...</SaveIcon>}\n            disabled={!formatted}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSaveAs}>\n            Save As...\n          </Button>\n        </Toolbar>\n\n        <SyntaxHighlighter style={syntaxTheme} language=\"json\" className={classes.formatted}>\n          {formatted}\n        </SyntaxHighlighter>\n      </div>\n    </>\n  );\n};\n\nexport function mapStateToProps(state: AppState) {\n  return {\n    inputText: state.textInputs['lastJSONFormatterValue'],\n  };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    storeInputText: (name: string, value: string) => dispatch(setTextAction(name, value)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JSONFormatter);\n","import React, { ElementType } from 'react';\n\nimport { Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    wordBreak: 'break-word',\n  },\n  titleWithIcon: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  icon: {\n    height: '40px',\n    width: '40px',\n    marginRight: theme.spacing(1),\n  },\n}));\n\ninterface Props {\n  title: string;\n  iconType: ElementType;\n}\n\nconst FeatureTitle: React.FC<Props> = ({ title, iconType: FeatureIcon }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.titleContainer}>\n      <div className={classes.titleWithIcon}>\n        <FeatureIcon className={classes.icon} />\n        <Typography variant=\"h5\" className={classes.title}>\n          {title}\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default FeatureTitle;\n","import React from 'react';\n\nimport AssignmentTurnedIn from '@mui/icons-material/AssignmentTurnedIn';\nimport { Button, ButtonProps, SvgIconTypeMap } from '@mui/material';\nimport { OverridableComponent } from '@mui/material/OverridableComponent';\nimport * as copy from 'copy-to-clipboard';\n\nimport { useToasterUpdate } from '../Toaster/ToasterProvider';\n\ntype Props = {\n  data?: string;\n  isDisabled?: boolean;\n  hoverMessage?: string;\n  feedbackMessage?: string;\n  Icon?: OverridableComponent<SvgIconTypeMap<unknown, 'svg'>>;\n} & ButtonProps;\n\nconst CopyButton: React.FC<Props> = ({\n  data,\n  isDisabled,\n  hoverMessage,\n  feedbackMessage,\n  Icon = AssignmentTurnedIn,\n  ...others\n}: Props) => {\n  const { setToasterState } = useToasterUpdate();\n\n  const handleCopy = () => {\n    if (!data) {\n      return;\n    }\n\n    const message = feedbackMessage ?? `Content copied into clipboard: ${data.substring(0, 25)} …`;\n\n    copy.default(data, { format: 'text/plain' });\n    setToasterState({ open: true, message, type: 'success', autoHideDuration: 2000 });\n  };\n\n  return (\n    <Button\n      {...others}\n      onClick={handleCopy}\n      disabled={!data || isDisabled}\n      title={hoverMessage ?? 'Copy to clipboard'}\n      variant=\"contained\"\n      color=\"primary\">\n      <Icon />\n    </Button>\n  );\n};\n\nexport default CopyButton;\n","import { dark, docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nimport { usePreferenceTheme } from '../components/Preferences/PreferencesProvider';\n\nexport const useSyntaxHighlightTheme = () => {\n  const { isDark } = usePreferenceTheme();\n\n  return isDark ? dark : docco;\n};\n","import { saveAs } from 'file-saver';\n\nexport function saveJsonAs(jsonContent: string): void {\n  // Will be defined if the React App is running inside Electron\n  if (window.require) {\n    const ipc = window.require('electron').ipcRenderer;\n    ipc.send('saveJsonAs', jsonContent);\n  } else {\n    const blob = new Blob([jsonContent], { type: 'application/json' });\n    saveAs(blob, 'data.json');\n  }\n}\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;"],"sourceRoot":""}