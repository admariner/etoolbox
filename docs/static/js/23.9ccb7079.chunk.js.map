{"version":3,"sources":["containers/JSONFormatter/services.ts","containers/JSONFormatter/index.tsx","components/FeatureTitle/index.tsx","components/CopyButton/index.tsx","hooks/useSyntaxHighlightTheme.ts","services/file-utils.ts","../../src/FileSaver.js","../node_modules/@mui/icons-material/Save.js"],"names":["replacer","_key","value","Object","Array","keys","sort","reduce","sorted","key","useStyles","makeStyles","theme","root","margin","spacing","formatted","borderColor","palette","text","disabled","borderStyle","borderWidth","borderRadius","shape","maxHeight","width","overflow","toolbar","padding","mapStateToProps","state","inputText","textInputs","mapDispatchToProps","dispatch","storeInputText","name","setTextAction","connect","props","title","classes","isMdUp","useIsWidthUp","syntaxTheme","useSyntaxHighlightTheme","React","useState","setFormatted","useEffect","obj","JSON","parse","stringify","e","services","Helmet","className","FeatureTitle","iconType","WrapTextIcon","noValidate","autoComplete","TextField","autoFocus","label","placeholder","multiline","minRows","maxRows","variant","fullWidth","onChange","target","Toolbar","Box","display","flexGrow","CopyButton","data","sx","mr","Button","endIcon","color","onClick","event","preventDefault","fileService","style","language","wordBreak","titleWithIcon","alignItems","titleContainer","justifyContent","icon","height","marginRight","FeatureIcon","isDisabled","hoverMessage","feedbackMessage","Icon","AssignmentTurnedIn","others","setToasterState","useToasterUpdate","message","substring","copy","format","open","type","autoHideDuration","usePreferenceTheme","isDark","dark","docco","saveJsonAs","jsonContent","window","require","ipcRenderer","send","blob","Blob","saveAs","b","autoBom","console","test","status","MouseEvent","document","self","global","navigator","HTMLAnchorElement","location","setTimeout","f","i","module","_interopRequireDefault","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/23.9ccb7079.chunk.js","sourcesContent":["// Spec http://www.ecma-international.org/ecma-262/6.0/#sec-json.stringify\nconst replacer = (_key: string, value: any) =>\n    value instanceof Object && !(value instanceof Array)\n        ? Object.keys(value)\n              .sort()\n              .reduce((sorted: any, key: string) => {\n                  sorted[key] = value[key];\n                  return sorted;\n              }, {})\n        : value;\n\nexport function formatJson(value?: string): string {\n    if (!value) {\n        return '';\n    }\n\n    try {\n        const obj = JSON.parse(value);\n        return JSON.stringify(obj, replacer, 4);\n    } catch (e) {\n        //  do nothing user may still be typing...\n        return value;\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { Box, Toolbar } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@mui/styles';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport SaveIcon from '@mui/icons-material/Save';\nimport WrapTextIcon from '@mui/icons-material/WrapText';\nimport TextField from '@mui/material/TextField';\n\nimport { setTextAction } from '../../actions/text-actions';\nimport { AppState } from '../../reducers';\nimport * as services from './services';\nimport * as fileService from '../../services/file-utils';\nimport FeatureTitle from '../../components/FeatureTitle';\nimport CopyButton from '../../components/CopyButton';\nimport { Helmet } from 'react-helmet';\nimport { useSyntaxHighlightTheme } from '../../hooks/useSyntaxHighlightTheme';\nimport { useIsWidthUp } from '../../theme';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    formatted: {\n        borderColor: theme.palette.text.disabled,\n        borderStyle: 'solid',\n        borderWidth: 1,\n        borderRadius: theme.shape.borderRadius,\n        maxHeight: '500px',\n        width: '100%',\n        overflow: 'auto',\n    },\n    toolbar: {\n        margin: 0,\n        padding: 0,\n    },\n}));\n\ninterface Props {\n    inputText?: string;\n    storeInputText: (name: string, value: string) => void;\n}\n\nconst JSONFormatter: React.FC<Props> = (props: Props) => {\n    const title = 'JSON Formatter';\n    const classes = useStyles();\n    const isMdUp = useIsWidthUp('md');\n    const syntaxTheme = useSyntaxHighlightTheme();\n    const { inputText, storeInputText } = props;\n    const [formatted, setFormatted] = React.useState('');\n\n    React.useEffect(() => {\n        setFormatted(services.formatJson(inputText));\n    }, [inputText]);\n\n    const handleSaveAs = (event: any) => {\n        event.preventDefault();\n        fileService.saveJsonAs(formatted);\n    };\n\n    return (\n        <>\n            <Helmet title={title} />\n            <div className={classes.root}>\n                <FeatureTitle iconType={WrapTextIcon} title={title} />\n\n                <form noValidate autoComplete=\"off\">\n                    <div>\n                        <TextField\n                            autoFocus={isMdUp}\n                            label=\"JSON Content\"\n                            placeholder=\"Paste or type the json content here\"\n                            multiline\n                            minRows={10}\n                            maxRows={isMdUp ? 20 : 10}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            fullWidth={true}\n                            value={inputText}\n                            onChange={e => storeInputText('lastJSONFormatterValue', e.target.value)}\n                        />\n                    </div>\n                </form>\n\n                <Toolbar className={classes.toolbar}>\n                    <Box display=\"flex\" flexGrow={1}></Box>\n                    <CopyButton data={formatted} sx={{ mr: 1 }} />\n                    <Button\n                        endIcon={<SaveIcon>Save As...</SaveIcon>}\n                        disabled={!formatted}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleSaveAs}>\n                        Save As...\n                    </Button>\n                </Toolbar>\n\n                <SyntaxHighlighter style={syntaxTheme} language=\"json\" className={classes.formatted}>\n                    {formatted}\n                </SyntaxHighlighter>\n            </div>\n        </>\n    );\n};\n\nexport function mapStateToProps(state: AppState) {\n    return {\n        inputText: state.textInputs['lastJSONFormatterValue'],\n    };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        storeInputText: (name: string, value: string) => dispatch(setTextAction(name, value)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JSONFormatter);\n","import { Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        wordBreak: 'break-word',\n    },\n    titleWithIcon: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    titleContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        height: '40px',\n        width: '40px',\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Props {\n    title: string;\n    iconType: any;\n}\n\nconst FeatureTitle: React.FC<Props> = (props: Props) => {\n    const classes = useStyles();\n    const FeatureIcon = props.iconType;\n\n    return (\n        <div className={classes.titleContainer}>\n            <div className={classes.titleWithIcon}>\n                <FeatureIcon className={classes.icon} />\n                <Typography variant=\"h5\" className={classes.title}>\n                    {props.title}\n                </Typography>\n            </div>\n        </div>\n    );\n};\n\nexport default FeatureTitle;\n","import { Button, ButtonProps, SvgIconTypeMap } from '@mui/material';\nimport { OverridableComponent } from '@mui/material/OverridableComponent';\nimport AssignmentTurnedIn from '@mui/icons-material/AssignmentTurnedIn';\nimport * as copy from 'copy-to-clipboard';\nimport React from 'react';\nimport { useToasterUpdate } from '../Toaster/ToasterProvider';\n\ntype Props = {\n    data?: string;\n    isDisabled?: boolean;\n    hoverMessage?: string;\n    feedbackMessage?: string;\n    Icon?: OverridableComponent<SvgIconTypeMap<unknown, 'svg'>>;\n} & ButtonProps;\n\nconst CopyButton: React.FC<Props> = ({\n    data,\n    isDisabled,\n    hoverMessage,\n    feedbackMessage,\n    Icon = AssignmentTurnedIn,\n    ...others\n}: Props) => {\n    const { setToasterState } = useToasterUpdate();\n\n    const handleCopy = () => {\n        if (!data) {\n            return;\n        }\n\n        const message = feedbackMessage ?? `Content copied into clipboard: ${data.substring(0, 25)} …`;\n\n        copy.default(data, { format: 'text/plain' });\n        setToasterState({ open: true, message, type: 'success', autoHideDuration: 2000 });\n    };\n\n    return (\n        <Button\n            {...others}\n            onClick={handleCopy}\n            disabled={!data || isDisabled}\n            title={hoverMessage ?? 'Copy to clipboard'}\n            variant=\"contained\"\n            color=\"primary\">\n            <Icon />\n        </Button>\n    );\n};\n\nexport default CopyButton;\n","import { usePreferenceTheme } from '../components/Preferences/PreferencesProvider';\nimport { docco, dark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nexport const useSyntaxHighlightTheme = () => {\n    const { isDark } = usePreferenceTheme();\n\n    return isDark ? dark : docco;\n};\n","import { saveAs } from 'file-saver';\n\nexport function saveJsonAs(jsonContent: string): void {\n    // Will be defined if the React App is running inside Electron\n    if (window.require) {\n        const ipc = window.require('electron').ipcRenderer;\n        ipc.send('saveJsonAs', jsonContent);\n    } else {\n        const blob = new Blob([jsonContent], { type: 'application/json' });\n        saveAs(blob, 'data.json');\n    }\n}\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;"],"sourceRoot":""}