{"version":3,"sources":["containers/QRCodeGenerator/services.ts","containers/QRCodeGenerator/index.tsx","components/FeatureTitle/index.tsx","components/CopyButton/index.tsx","../node_modules/@mui/material/esm/Card/cardClasses.js","../node_modules/@mui/material/esm/Card/Card.js","../node_modules/@mui/material/esm/CardContent/cardContentClasses.js","../node_modules/@mui/material/esm/CardContent/CardContent.js","../node_modules/@mui/material/esm/Link/linkClasses.js","../node_modules/@mui/material/esm/Link/getTextDecoration.js","../node_modules/@mui/material/esm/Link/Link.js","../node_modules/@mui/icons-material/Photo.js"],"names":["DEFAULT_OPTIONS","errorCorrectionLevel","type","width","quality","margin","color","dark","light","useStyles","makeStyles","theme","root","spacing","toolbar","padding","qrOptions","fontFamily","generatedQR","mapStateToProps","state","inputText","textInputs","inputOptions","mapDispatchToProps","dispatch","storeInputText","name","value","setTextAction","connect","props","title","classes","isMdUp","useIsWidthUp","React","useState","imgDataURL","setImgDataURL","setToasterState","useToasterUpdate","copyImage","fetch","response","blob","navigator","clipboard","write","ClipboardItem","open","message","autoHideDuration","console","error","Helmet","className","FeatureTitle","iconType","QRCodeIcon","noValidate","autoComplete","Grid","container","item","md","sm","xs","TextField","autoFocus","label","placeholder","multiline","minRows","maxRows","variant","fullWidth","onChange","e","target","InputProps","input","helperText","Link","rel","href","Toolbar","Box","display","flexGrow","CopyButton","hoverMessage","data","sx","mr","Button","disabled","onClick","endIcon","opts","JSON","parse","services","QRCode","toDataURL","err","url","stringify","Card","alignItems","justifyContent","p","id","src","alt","CardContent","wordBreak","titleWithIcon","titleContainer","icon","height","marginRight","FeatureIcon","isDisabled","feedbackMessage","Icon","AssignmentTurnedIn","others","substring","copy","format","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","styles","overflow","inProps","ref","useThemeProps","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","composeClasses","useUtilityClasses","_jsx","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","paddingBottom","component","as","getLinkUtilityClass","linkClasses","colorTransformations","primary","textPrimary","secondary","textSecondary","getTextDecoration","transformedColor","transformDeprecatedColors","getPath","channelColor","alpha","LinkRoot","Typography","capitalize","underline","button","textDecoration","textDecorationColor","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","focusVisible","onBlur","onFocus","TypographyClasses","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","setFocusVisible","handlerRef","useForkRef","slots","event","current","Object","keys","includes","Array","isArray","_interopRequireDefault","require","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d"],"mappings":"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","file":"static/js/24.f1118305.chunk.js","sourcesContent":["export const DEFAULT_OPTIONS = {\n    errorCorrectionLevel: 'H',\n    type: 'image/png',\n    width: 200,\n    quality: 0.3,\n    margin: 1,\n    color: {\n        dark: '#000000FF',\n        light: '#FFFFFFFF',\n    },\n};\n","import { Box, Button, Card, CardContent, Grid, Link, TextField, Toolbar } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport QRCodeIcon from '@mui/icons-material/QrCode';\nimport PictureIcon from '@mui/icons-material/Photo';\nimport QRCode from 'qrcode';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { setTextAction } from '../../actions/text-actions';\nimport CopyButton from '../../components/CopyButton';\nimport FeatureTitle from '../../components/FeatureTitle';\nimport { useToasterUpdate } from '../../components/Toaster/ToasterProvider';\nimport { AppState } from '../../reducers';\nimport * as services from './services';\nimport { useIsWidthUp } from '../../theme';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    toolbar: {\n        margin: 0,\n        padding: 0,\n    },\n    qrOptions: {\n        fontFamily: 'monospace',\n    },\n    generatedQR: {\n        padding: theme.spacing(2),\n    },\n}));\n\ninterface Props {\n    inputText?: string;\n    inputOptions?: string;\n    storeInputText: (name: string, value: string) => void;\n}\n\nconst QRCodeGenerator: React.FC<Props> = (props: Props) => {\n    const title = 'QR Code generator';\n    const classes = useStyles();\n    const isMdUp = useIsWidthUp('md');\n    const { inputText, inputOptions, storeInputText } = props;\n    const [imgDataURL, setImgDataURL] = React.useState('');\n    const { setToasterState } = useToasterUpdate();\n\n    const copyImage = async () => {\n        try {\n            const response = await fetch(imgDataURL);\n            const blob = await response.blob();\n            // TODO We may have to do this workaround for Safari: https://stackoverflow.com/a/68241503/704681\n            await navigator.clipboard.write([new ClipboardItem({ 'image/png': blob })]);\n            setToasterState({ open: true, message: 'Image copied', type: 'success', autoHideDuration: 2000 });\n        } catch (e) {\n            console.error(e);\n            const errorMessage = `Unexpected copy error, see detail on console`;\n            setToasterState({ open: true, message: errorMessage, type: 'warning', autoHideDuration: 2000 });\n        }\n    };\n\n    function generate() {\n        if (!inputText) {\n            return;\n        }\n\n        const opts = inputOptions ? JSON.parse(inputOptions) : services.DEFAULT_OPTIONS;\n        QRCode.toDataURL(inputText, opts, (err, url) => {\n            if (err) {\n                throw err;\n            }\n\n            setImgDataURL(url);\n            storeInputText('lastQRCodeOptions', JSON.stringify(opts, null, 2));\n        });\n    }\n\n    return (\n        <>\n            <Helmet title={title} />\n            <div className={classes.root}>\n                <FeatureTitle iconType={QRCodeIcon} title={title} />\n\n                <form noValidate autoComplete=\"off\">\n                    <Grid container spacing={1}>\n                        <Grid item md={6} sm={12} xs={12}>\n                            <TextField\n                                autoFocus={isMdUp}\n                                label=\"Text to store into QR Code\"\n                                placeholder=\"Paste or type the content here\"\n                                multiline\n                                minRows={12}\n                                maxRows={isMdUp ? 20 : 12}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth={true}\n                                value={inputText}\n                                onChange={e => storeInputText('lastQRCodeTextValue', e.target.value)}\n                            />\n                        </Grid>\n                        <Grid item md={6} sm={12} xs={12}>\n                            <TextField\n                                label=\"QR Code generation options\"\n                                multiline\n                                minRows={12}\n                                maxRows={isMdUp ? 20 : 12}\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                fullWidth={true}\n                                InputProps={{\n                                    classes: {\n                                        input: classes.qrOptions,\n                                    },\n                                }}\n                                value={inputOptions}\n                                onChange={e => storeInputText('lastQRCodeOptions', e.target.value)}\n                                helperText={\n                                    <Link\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                        href=\"https://www.npmjs.com/package/qrcode#qr-code-options\">\n                                        Options documentation available here!\n                                    </Link>\n                                }\n                            />\n                        </Grid>\n                    </Grid>\n                </form>\n\n                <Toolbar className={classes.toolbar}>\n                    <Box display=\"flex\" flexGrow={1}></Box>\n                    <CopyButton hoverMessage=\"Copy image data URL\" data={imgDataURL} sx={{ mr: 1 }} />\n                    <Button\n                        disabled={!imgDataURL}\n                        variant=\"contained\"\n                        title=\"Copy the QR Code image into the clipboard\"\n                        color=\"primary\"\n                        onClick={copyImage}\n                        endIcon={<PictureIcon />}\n                        sx={{ mr: 1 }}>\n                        Copy Image\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        title=\"Generate the QR code using the info and encoding parameters\"\n                        onClick={generate}\n                        disabled={!inputText}\n                        endIcon={<QRCodeIcon />}>\n                        Generate\n                    </Button>\n                </Toolbar>\n\n                {imgDataURL && (\n                    <Card className={classes.generatedQR}>\n                        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" p={1}>\n                            <img id=\"imgQrCode\" src={imgDataURL} alt=\"QR Code\" />\n                        </Box>\n                        <CardContent>\n                            <TextField\n                                label=\"Full img tag\"\n                                fullWidth\n                                value={`<img alt=\"QR Code\" src=\"${imgDataURL}\"/>`}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                            />\n                            <TextField\n                                label=\"QR Code. Copy-paste into 'src' attribute\"\n                                fullWidth\n                                value={imgDataURL}\n                                margin=\"normal\"\n                                variant=\"outlined\"\n                                multiline\n                                minRows=\"8\"\n                            />\n                        </CardContent>\n                    </Card>\n                )}\n            </div>\n        </>\n    );\n};\n\nexport function mapStateToProps(state: AppState) {\n    return {\n        inputText: state.textInputs['lastQRCodeTextValue'],\n        inputOptions: state.textInputs['lastQRCodeOptions'],\n    };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        storeInputText: (name: string, value: string) => dispatch(setTextAction(name, value)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QRCodeGenerator);\n","import { Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        wordBreak: 'break-word',\n    },\n    titleWithIcon: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    titleContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        height: '40px',\n        width: '40px',\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Props {\n    title: string;\n    iconType: any;\n}\n\nconst FeatureTitle: React.FC<Props> = (props: Props) => {\n    const classes = useStyles();\n    const FeatureIcon = props.iconType;\n\n    return (\n        <div className={classes.titleContainer}>\n            <div className={classes.titleWithIcon}>\n                <FeatureIcon className={classes.icon} />\n                <Typography variant=\"h5\" className={classes.title}>\n                    {props.title}\n                </Typography>\n            </div>\n        </div>\n    );\n};\n\nexport default FeatureTitle;\n","import { Button, ButtonProps, SvgIconTypeMap } from '@mui/material';\nimport { OverridableComponent } from '@mui/material/OverridableComponent';\nimport AssignmentTurnedIn from '@mui/icons-material/AssignmentTurnedIn';\nimport * as copy from 'copy-to-clipboard';\nimport React from 'react';\nimport { useToasterUpdate } from '../Toaster/ToasterProvider';\n\ntype Props = {\n    data?: string;\n    isDisabled?: boolean;\n    hoverMessage?: string;\n    feedbackMessage?: string;\n    Icon?: OverridableComponent<SvgIconTypeMap<unknown, 'svg'>>;\n} & ButtonProps;\n\nconst CopyButton: React.FC<Props> = ({\n    data,\n    isDisabled,\n    hoverMessage,\n    feedbackMessage,\n    Icon = AssignmentTurnedIn,\n    ...others\n}: Props) => {\n    const { setToasterState } = useToasterUpdate();\n\n    const handleCopy = () => {\n        if (!data) {\n            return;\n        }\n\n        const message = feedbackMessage ?? `Content copied into clipboard: ${data.substring(0, 25)} …`;\n\n        copy.default(data, { format: 'text/plain' });\n        setToasterState({ open: true, message, type: 'success', autoHideDuration: 2000 });\n    };\n\n    return (\n        <Button\n            {...others}\n            onClick={handleCopy}\n            disabled={!data || isDisabled}\n            title={hoverMessage ?? 'Copy to clipboard'}\n            variant=\"contained\"\n            color=\"primary\">\n            <Icon />\n        </Button>\n    );\n};\n\nexport default CopyButton;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\n\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n\n  const {\n    className,\n    component = 'div'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    component\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n\n  return alpha(color, 0.4);\n};\n\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"\n}), 'Photo');\n\nexports.default = _default;"],"sourceRoot":""}