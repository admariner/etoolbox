{"version":3,"sources":["containers/GithubUserProjects/styles.ts","containers/GithubUserProjects/index.tsx","components/FeatureTitle/index.tsx","hooks/usePagination.ts","components/Filter/styles.ts","components/Filter/index.tsx","../node_modules/@mui/icons-material/Visibility.js","../node_modules/@mui/material/esm/Link/linkClasses.js","../node_modules/@mui/material/esm/Link/getTextDecoration.js","../node_modules/@mui/material/esm/Link/Link.js","components/FilterStats/styles.ts","components/FilterStats/index.tsx"],"names":["StyledTableCell","withStyles","body","fontSize","whiteSpace","wordBreak","TableCell","StyledTableRow","theme","root","backgroundColor","palette","action","hover","TableRow","useStyles","makeStyles","margin","spacing","toolbar","padding","marginLeft","tableHeader","primary","main","dateColumn","textAlign","minWidth","watchColumn","mapStateToProps","state","inputText","textInputs","projects","githubUserProjects","searching","mapDispatchToProps","dispatch","listGithubUserProjectsRequested","username","storeInputText","name","value","setTextAction","connect","props","title","classes","isMdUp","useIsWidthUp","React","useState","inputFilter","setInputFilter","setGlobalSpinnerState","useGlobalSpinnerUpdate","usePagination","page","setPage","rowsPerPage","handleChangeRowsPerPage","useEffect","open","setTimeout","Helmet","className","FeatureTitle","iconType","GithubIcon","Toolbar","Filter","autofocus","label","initialFilter","onFilterChange","newInputFilter","Box","display","flexGrow","FilterStats","count","length","TablePagination","rowsPerPageOptions","component","onPageChange","_","onRowsPerPageChange","TableContainer","Paper","Table","size","TableHead","scope","TableBody","slice","map","project","Link","href","html_url","target","rel","description","Date","updated_at","toLocaleDateString","watchers_count","id","titleWithIcon","alignItems","titleContainer","justifyContent","icon","height","width","marginRight","FeatureIcon","variant","setRowsPerPage","evt","fullWidth","filter","setFilter","debounced","useDebouncedCallback","FormControl","InputLabel","htmlFor","Input","autoFocus","type","onChange","e","endAdornment","InputAdornment","position","IconButton","_interopRequireDefault","require","Object","defineProperty","exports","default","_createSvgIcon","_jsxRuntime","_default","jsx","d","getLinkUtilityClass","slot","generateUtilityClass","linkClasses","generateUtilityClasses","colorTransformations","textPrimary","secondary","textSecondary","error","getTextDecoration","ownerState","transformedColor","color","transformDeprecatedColors","getPath","channelColor","alpha","_excluded","LinkRoot","styled","Typography","overridesResolver","styles","capitalize","underline","button","_extends","textDecoration","textDecorationColor","WebkitTapHighlightColor","outline","border","borderRadius","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","focusVisible","inProps","ref","useThemeProps","onBlur","onFocus","TypographyClasses","sx","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","setFocusVisible","handlerRef","useForkRef","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current","keys","includes","Array","isArray","SPACE","working","setWorking","align"],"mappings":"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","file":"static/js/25.5d07a47c.chunk.js","sourcesContent":["import { TableCell, TableRow } from '@mui/material';\nimport { makeStyles, withStyles } from '@mui/styles';\n\nexport const StyledTableCell = withStyles(() => ({\n  body: {\n    fontSize: 14,\n    whiteSpace: 'normal',\n    wordBreak: 'break-word',\n  },\n}))(TableCell);\n\nexport const StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(even)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n  toolbar: {\n    margin: 0,\n    padding: 0,\n    '& > *': {\n      marginLeft: theme.spacing(1),\n    },\n  },\n  tableHeader: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  dateColumn: {\n    textAlign: 'center',\n    minWidth: 120,\n  },\n  watchColumn: {\n    textAlign: 'center',\n  },\n}));\n","import React from 'react';\n\nimport GithubIcon from '@mui/icons-material/GitHub';\nimport WatchIcon from '@mui/icons-material/Visibility';\nimport {\n  Box,\n  Link,\n  Paper,\n  Table,\n  TableBody,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Toolbar,\n} from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { listGithubUserProjectsRequested } from '../../actions/github-userprojects-actions';\nimport { setTextAction } from '../../actions/text-actions';\nimport FeatureTitle from '../../components/FeatureTitle';\nimport Filter from '../../components/Filter';\nimport FilterStats from '../../components/FilterStats';\nimport { useGlobalSpinnerUpdate } from '../../components/Spinner/GlobalSpinnerProvider';\nimport { usePagination } from '../../hooks/usePagination';\nimport { AppState } from '../../reducers';\nimport { useIsWidthUp } from '../../theme';\nimport { GithubUserProject } from '../../types/github-types';\nimport { StyledTableCell, StyledTableRow, useStyles } from './styles';\n\ninterface Props {\n  inputText: string;\n  projects: GithubUserProject[];\n  searching: boolean;\n\n  listGithubUserProjectsRequested: (username: string) => void;\n  storeInputText: (name: string, value: string) => void;\n}\n\nconst GithubUserProjects: React.FC<Props> = (props: Props) => {\n  const title = 'Github user projects';\n  const classes = useStyles();\n  const isMdUp = useIsWidthUp('md');\n  const { inputText, searching, projects, listGithubUserProjectsRequested, storeInputText } = props;\n  const [inputFilter, setInputFilter] = React.useState(inputText);\n  const { setGlobalSpinnerState } = useGlobalSpinnerUpdate();\n  const { page, setPage, rowsPerPage, handleChangeRowsPerPage } = usePagination();\n\n  function applyFilter(newInputFilter: string) {\n    setInputFilter(newInputFilter);\n    listGithubUserProjectsRequested(newInputFilter);\n    storeInputText('lastGithubUsernameValue', newInputFilter);\n  }\n\n  React.useEffect(() => {\n    if (searching && inputText) {\n      setGlobalSpinnerState({ open: true });\n    } else {\n      setTimeout(() => setGlobalSpinnerState({ open: false }), 500);\n    }\n  }, [searching, inputText, setGlobalSpinnerState]);\n\n  return (\n    <>\n      <Helmet title={title} />\n      <div className={classes.root}>\n        <FeatureTitle iconType={GithubIcon} title={title} />\n\n        <Toolbar className={classes.toolbar}>\n          <Filter autofocus={isMdUp} label=\"Username\" initialFilter={inputFilter} onFilterChange={applyFilter} />\n          <Box display=\"flex\" flexGrow={1}></Box>\n          <FilterStats count={projects.length} searching={searching} />\n        </Toolbar>\n\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          component=\"div\"\n          count={projects.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onPageChange={(_, page) => setPage(page)}\n          onRowsPerPageChange={handleChangeRowsPerPage}\n        />\n        <TableContainer component={Paper}>\n          <Table size={isMdUp ? 'medium' : 'small'}>\n            <TableHead className={classes.tableHeader}>\n              <TableRow>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  Project\n                </StyledTableCell>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  Description\n                </StyledTableCell>\n                <StyledTableCell component=\"th\" scope=\"row\" className={classes.dateColumn}>\n                  Updated\n                </StyledTableCell>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  <WatchIcon />\n                </StyledTableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {projects.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(project => {\n                return (\n                  <StyledTableRow key={project.id}>\n                    <StyledTableCell>\n                      <Link href={project.html_url} target=\"_blank\" rel=\"noreferrer\">\n                        {project.name}\n                      </Link>\n                    </StyledTableCell>\n                    <StyledTableCell>{project.description}</StyledTableCell>\n                    <StyledTableCell className={classes.dateColumn}>\n                      {new Date(project.updated_at).toLocaleDateString()}\n                    </StyledTableCell>\n                    <StyledTableCell className={classes.watchColumn}>{project.watchers_count}</StyledTableCell>\n                  </StyledTableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    </>\n  );\n};\n\nexport function mapStateToProps(state: AppState) {\n  return {\n    inputText: state.textInputs['lastGithubUsernameValue'],\n    projects: state.githubUserProjects.projects,\n    searching: state.githubUserProjects.searching,\n  };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    listGithubUserProjectsRequested: (username: string) => dispatch(listGithubUserProjectsRequested(username)),\n    storeInputText: (name: string, value: string) => dispatch(setTextAction(name, value)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GithubUserProjects);\n","import React, { ElementType } from 'react';\n\nimport { Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    wordBreak: 'break-word',\n  },\n  titleWithIcon: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  icon: {\n    height: '40px',\n    width: '40px',\n    marginRight: theme.spacing(1),\n  },\n}));\n\ninterface Props {\n  title: string;\n  iconType: ElementType;\n}\n\nconst FeatureTitle: React.FC<Props> = ({ title, iconType: FeatureIcon }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.titleContainer}>\n      <div className={classes.titleWithIcon}>\n        <FeatureIcon className={classes.icon} />\n        <Typography variant=\"h5\" className={classes.title}>\n          {title}\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default FeatureTitle;\n","import { useState } from 'react';\n\nexport const usePagination = () => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleChangeRowsPerPage = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+evt.target.value);\n    setPage(0);\n  };\n\n  return {\n    page,\n    setPage,\n    rowsPerPage,\n    handleChangeRowsPerPage,\n  };\n};\n","import { makeStyles } from '@mui/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n}));\n","import React from 'react';\n\nimport SearchIcon from '@mui/icons-material/Search';\nimport { FormControl, IconButton, Input, InputAdornment, InputLabel } from '@mui/material';\nimport { useDebouncedCallback } from 'use-debounce';\n\nimport { useStyles } from './styles';\n\ninterface Props {\n  label?: string;\n  autofocus?: boolean;\n  fullWidth?: boolean;\n  initialFilter?: string;\n  onFilterChange: (newValue: string) => void;\n}\n\nconst Filter: React.FC<Props> = ({\n  label = 'Search',\n  autofocus = false,\n  fullWidth = false,\n  initialFilter = '',\n  onFilterChange,\n}) => {\n  const [filter, setFilter] = React.useState(initialFilter);\n  const classes = useStyles();\n\n  // https://www.npmjs.com/package/use-debounce\n  // Since onFilterChange may launch http requests, we trottle these calls with a delay\n  // Implementation note: we CAN'T just replace this mechanism with useDeferredValue because\n  // that would not prevent the \"too many http calls\" issue\n  const debounced = useDebouncedCallback((filter: string) => onFilterChange(filter), 300);\n\n  React.useEffect(() => debounced(filter), [filter, debounced]);\n\n  return (\n    <FormControl fullWidth={fullWidth} className={classes.root}>\n      <InputLabel htmlFor=\"searchField\">{label}</InputLabel>\n      <Input\n        id=\"searchField\"\n        autoFocus={autofocus}\n        type=\"text\"\n        value={filter}\n        onChange={e => setFilter(e.target.value)}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton>\n              <SearchIcon />\n            </IconButton>\n          </InputAdornment>\n        }\n      />\n    </FormControl>\n  );\n};\n\nexport default Filter;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { alpha, getPath } from '@mui/system';\nexport const colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n\n  return alpha(color, 0.4);\n};\n\nexport default getTextDecoration;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport getTextDecoration, { colorTransformations } from './getTextDecoration';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && _extends({\n    textDecoration: 'underline'\n  }, ownerState.color !== 'inherit' && {\n    textDecorationColor: getTextDecoration({\n      theme,\n      ownerState\n    })\n  }, {\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }), ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant,\n    sx: [...(!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])]\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","import { makeStyles } from '@mui/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n}));\n","import React from 'react';\n\nimport { Typography } from '@mui/material';\n\nimport { SPACE } from '../../constants';\nimport { useStyles } from './styles';\n\ninterface Props {\n  searching: boolean;\n  count: number;\n}\n\nconst FILTERING = 'filtering…';\n\nconst FilterStats: React.FC<Props> = (props: Props) => {\n  const classes = useStyles();\n  const [working, setWorking] = React.useState(SPACE);\n  const { count, searching } = props;\n\n  React.useEffect(() => {\n    if (searching) {\n      setWorking(FILTERING);\n    } else {\n      setTimeout(() => setWorking(SPACE), 800);\n    }\n  }, [searching]);\n\n  return (\n    <div className={classes.root}>\n      <Typography align=\"right\">{working}</Typography>\n      <Typography align=\"right\">{count}</Typography>\n    </div>\n  );\n};\n\nexport default FilterStats;\n"],"sourceRoot":""}