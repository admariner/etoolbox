{"version":3,"sources":["../../lib/atob.js","../../lib/base64_url_decode.js","../../lib/index.js","containers/JWTDecoder/services.ts","containers/JWTDecoder/index.tsx","components/FeatureTitle/index.tsx","components/CopyButton/index.tsx","hooks/useSyntaxHighlightTheme.ts"],"names":["InvalidCharacterError","message","this","prototype","Error","name","window","atob","bind","input","str","String","replace","length","bs","buffer","bc","idx","output","charAt","fromCharCode","indexOf","decodeURIComponent","m","p","code","charCodeAt","toString","toUpperCase","b64DecodeUnicode","err","InvalidTokenError","token","options","pos","header","JSON","parse","base64_url_decode","split","e","decode","value","obj","jwt_decode","stringify","useStyles","makeStyles","theme","root","margin","spacing","decoded","padding","borderColor","palette","text","disabled","borderStyle","borderWidth","borderRadius","shape","width","overflow","toolbar","mapStateToProps","state","inputText","textInputs","mapDispatchToProps","dispatch","storeInputText","setTextAction","connect","props","title","classes","isMdUp","useIsWidthUp","syntaxTheme","useSyntaxHighlightTheme","React","useState","services","setHeader","transformed","setTransformed","Helmet","className","FeatureTitle","iconType","LockOpenIcon","noValidate","autoComplete","TextField","autoFocus","id","label","placeholder","multiline","minRows","maxRows","variant","fullWidth","onChange","target","Toolbar","Box","display","flexGrow","CopyButton","data","sx","mr","Button","color","endIcon","onClick","language","style","wordBreak","titleWithIcon","alignItems","titleContainer","justifyContent","icon","height","marginRight","FeatureIcon","isDisabled","hoverMessage","feedbackMessage","Icon","AssignmentTurnedIn","others","setToasterState","useToasterUpdate","substring","copy","format","open","type","autoHideDuration","usePreferenceTheme","isDark","dark","docco"],"mappings":"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","file":"static/js/36.5f6ba898.chunk.js","sourcesContent":["/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;","import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}","\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}","import jwt_decode from 'jwt-decode';\n\nexport function decode(value: string | undefined, header: boolean): string {\n    if (!value) {\n        return '';\n    }\n\n    try {\n        const obj = jwt_decode(value, { header });\n        return JSON.stringify(obj, null, 4);\n    } catch (e) {\n        return JSON.stringify(e);\n    }\n}\n","import { Box, Toolbar } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@mui/styles';\nimport TextField from '@mui/material/TextField';\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { Dispatch } from 'redux';\nimport { setTextAction } from '../../actions/text-actions';\nimport CopyButton from '../../components/CopyButton';\nimport FeatureTitle from '../../components/FeatureTitle';\nimport { useSyntaxHighlightTheme } from '../../hooks/useSyntaxHighlightTheme';\nimport { AppState } from '../../reducers';\nimport * as services from './services';\nimport { useIsWidthUp } from '../../theme';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    decoded: {\n        padding: theme.spacing(1),\n        borderColor: theme.palette.text.disabled,\n        borderStyle: 'solid',\n        borderWidth: 1,\n        borderRadius: theme.shape.borderRadius,\n        width: '100%',\n        overflow: 'auto',\n    },\n    toolbar: {\n        margin: 0,\n        padding: 0,\n    },\n}));\n\ninterface Props {\n    inputText?: string;\n    storeInputText: (name: string, value: string) => void;\n}\n\nconst JWTDecoder: React.FC<Props> = (props: Props) => {\n    const title = 'JWT decoder…';\n    const classes = useStyles();\n    const isMdUp = useIsWidthUp('md');\n    const syntaxTheme = useSyntaxHighlightTheme();\n    const { inputText, storeInputText } = props;\n    const [header, setHeader] = React.useState(services.decode(inputText, true));\n    const [transformed, setTransformed] = React.useState(services.decode(inputText, false));\n\n    function handleDecode() {\n        setHeader(services.decode(inputText, true));\n        setTransformed(services.decode(inputText, false));\n    }\n\n    return (\n        <>\n            <Helmet title={title} />\n            <div className={classes.root}>\n                <FeatureTitle iconType={LockOpenIcon} title={title} />\n\n                <form noValidate autoComplete=\"off\">\n                    <TextField\n                        autoFocus={isMdUp}\n                        id=\"jwt\"\n                        label=\"JSON web token to decode\"\n                        placeholder=\"Paste or type the content here\"\n                        multiline\n                        minRows={10}\n                        maxRows={isMdUp ? 20 : 10}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth={true}\n                        value={inputText}\n                        onChange={e => storeInputText('lastJWT', e.target.value)}\n                    />\n                </form>\n\n                <Toolbar className={classes.toolbar}>\n                    <Box display=\"flex\" flexGrow={1}></Box>\n                    <CopyButton data={transformed} sx={{ mr: 1 }} />\n                    <Button\n                        variant=\"contained\"\n                        title=\"Decode the JWT Token\"\n                        color=\"primary\"\n                        endIcon={<LockOpenIcon>Decode</LockOpenIcon>}\n                        disabled={!inputText}\n                        onClick={handleDecode}>\n                        Decode\n                    </Button>\n                </Toolbar>\n\n                <div className={classes.decoded}>\n                    <div>\n                        <SyntaxHighlighter language=\"json\" style={syntaxTheme}>\n                            {header}\n                        </SyntaxHighlighter>\n\n                        <SyntaxHighlighter language=\"json\" style={syntaxTheme}>\n                            {transformed}\n                        </SyntaxHighlighter>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport function mapStateToProps(state: AppState) {\n    return {\n        inputText: state.textInputs['lastJWT'],\n    };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        storeInputText: (name: string, value: string) => dispatch(setTextAction(name, value)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JWTDecoder);\n","import { Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        wordBreak: 'break-word',\n    },\n    titleWithIcon: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    titleContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        height: '40px',\n        width: '40px',\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Props {\n    title: string;\n    iconType: any;\n}\n\nconst FeatureTitle: React.FC<Props> = (props: Props) => {\n    const classes = useStyles();\n    const FeatureIcon = props.iconType;\n\n    return (\n        <div className={classes.titleContainer}>\n            <div className={classes.titleWithIcon}>\n                <FeatureIcon className={classes.icon} />\n                <Typography variant=\"h5\" className={classes.title}>\n                    {props.title}\n                </Typography>\n            </div>\n        </div>\n    );\n};\n\nexport default FeatureTitle;\n","import { Button, ButtonProps, SvgIconTypeMap } from '@mui/material';\nimport { OverridableComponent } from '@mui/material/OverridableComponent';\nimport AssignmentTurnedIn from '@mui/icons-material/AssignmentTurnedIn';\nimport * as copy from 'copy-to-clipboard';\nimport React from 'react';\nimport { useToasterUpdate } from '../Toaster/ToasterProvider';\n\ntype Props = {\n    data?: string;\n    isDisabled?: boolean;\n    hoverMessage?: string;\n    feedbackMessage?: string;\n    Icon?: OverridableComponent<SvgIconTypeMap<unknown, 'svg'>>;\n} & ButtonProps;\n\nconst CopyButton: React.FC<Props> = ({\n    data,\n    isDisabled,\n    hoverMessage,\n    feedbackMessage,\n    Icon = AssignmentTurnedIn,\n    ...others\n}: Props) => {\n    const { setToasterState } = useToasterUpdate();\n\n    const handleCopy = () => {\n        if (!data) {\n            return;\n        }\n\n        const message = feedbackMessage ?? `Content copied into clipboard: ${data.substring(0, 25)} …`;\n\n        copy.default(data, { format: 'text/plain' });\n        setToasterState({ open: true, message, type: 'success', autoHideDuration: 2000 });\n    };\n\n    return (\n        <Button\n            {...others}\n            onClick={handleCopy}\n            disabled={!data || isDisabled}\n            title={hoverMessage ?? 'Copy to clipboard'}\n            variant=\"contained\"\n            color=\"primary\">\n            <Icon />\n        </Button>\n    );\n};\n\nexport default CopyButton;\n","import { usePreferenceTheme } from '../components/Preferences/PreferencesProvider';\nimport { docco, dark } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nexport const useSyntaxHighlightTheme = () => {\n    const { isDark } = usePreferenceTheme();\n\n    return isDark ? dark : docco;\n};\n"],"sourceRoot":""}