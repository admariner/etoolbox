{"version":3,"sources":["containers/JSONFormatter/services.ts","containers/JSONFormatter/index.tsx","hooks/useSyntaxHighlightTheme.ts","services/file-utils.ts","../../src/FileSaver.js","../node_modules/@material-ui/icons/Save.js"],"names":["replacer","_key","value","Object","Array","keys","sort","reduce","sorted","key","useStyles","makeStyles","theme","root","margin","spacing","formatted","borderColor","palette","text","disabled","borderStyle","borderWidth","borderRadius","shape","maxHeight","width","overflow","toolbar","padding","marginLeft","mapStateToProps","state","inputText","textInputs","mapDispatchToProps","dispatch","storeInputText","name","setTextAction","connect","withWidth","props","title","classes","syntaxTheme","useSyntaxHighlightTheme","React","useState","setFormatted","useEffect","obj","JSON","parse","stringify","e","services","Helmet","className","FeatureTitle","iconType","WrapTextIcon","noValidate","autoComplete","TextField","autoFocus","isWidthUp","label","placeholder","multiline","minRows","maxRows","variant","fullWidth","onChange","target","Toolbar","Box","display","flexGrow","CopyButton","data","Button","endIcon","color","onClick","event","preventDefault","fileService","style","language","usePreferenceTheme","isDark","dark","docco","saveJsonAs","jsonContent","window","require","ipcRenderer","send","blob","Blob","type","saveAs","autoBom","console","test","status","MouseEvent","document","self","global","navigator","HTMLAnchorElement","b","location","setTimeout","f","open","i","module","_interopRequireDefault","_interopRequireWildcard","defineProperty","exports","default","_default","createElement","d"],"mappings":"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","file":"static/js/11.1819f5b0.chunk.js","sourcesContent":["// Spec http://www.ecma-international.org/ecma-262/6.0/#sec-json.stringify\nconst replacer = (_key: string, value: any) =>\n    value instanceof Object && !(value instanceof Array) ?\n        Object.keys(value)\n            .sort()\n            .reduce((sorted: any, key: string) => {\n                sorted[key] = value[key];\n                return sorted;\n            }, {}) :\n        value;\n\nexport function formatJson(value?: string): string {\n    if (!value) {\n        return '';\n    }\n\n    try {\n        const obj = JSON.parse(value);\n        return JSON.stringify(obj, replacer, 4);\n    } catch (e) {\n        //  do nothing user may still be typing...\n        return value;\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch } from 'redux';\n\nimport { Box, Toolbar } from '@material-ui/core';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport SaveIcon from '@material-ui/icons/Save';\nimport WrapTextIcon from '@material-ui/icons/WrapText';\nimport TextField from '@material-ui/core/TextField';\n\nimport { setTextAction } from '../../actions/text-actions';\nimport { AppState } from '../../reducers';\nimport * as services from './services';\nimport * as fileService from '../../services/file-utils';\nimport FeatureTitle from '../../components/FeatureTitle';\nimport CopyButton from '../../components/CopyButton';\nimport { Helmet } from 'react-helmet';\nimport { useSyntaxHighlightTheme } from '../../hooks/useSyntaxHighlightTheme';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    formatted: {\n        borderColor: theme.palette.text.disabled,\n        borderStyle: 'solid',\n        borderWidth: 1,\n        borderRadius: theme.shape.borderRadius,\n        maxHeight: '500px',\n        width: '100%',\n        overflow: 'auto',\n    },\n    toolbar: {\n        margin: 0,\n        padding: 0,\n        '& > *': {\n            marginLeft: theme.spacing(1),\n        },\n    },\n}));\n\ninterface Props {\n    width: Breakpoint;\n    inputText?: string;\n    storeInputText: (name: string, value: string) => void;\n}\n\nconst JSONFormatter: React.FC<Props> = (props: Props) => {\n    const title = 'JSON Formatter';\n    const classes = useStyles();\n    const syntaxTheme = useSyntaxHighlightTheme();\n    const { inputText, storeInputText } = props;\n    const [formatted, setFormatted] = React.useState('');\n\n    React.useEffect(() => {\n        setFormatted(services.formatJson(inputText));\n    }, [inputText]);\n\n    const handleSaveAs = (event: any) => {\n        event.preventDefault();\n        fileService.saveJsonAs(formatted);\n    };\n\n    return (\n        <>\n            <Helmet title={title} />\n            <div className={classes.root}>\n                <FeatureTitle iconType={WrapTextIcon} title={title} />\n\n                <form noValidate autoComplete='off'>\n                    <div>\n                        <TextField\n                            autoFocus={isWidthUp('md', props.width)}\n                            label='JSON Content'\n                            placeholder='Paste or type the json content here'\n                            multiline\n                            minRows={10}\n                            maxRows={isWidthUp('md', props.width) ? 20 : 10}\n                            variant='outlined'\n                            margin='normal'\n                            fullWidth={true}\n                            value={inputText}\n                            onChange={(e) => storeInputText('lastJSONFormatterValue', e.target.value)}\n                        />\n                    </div>\n                </form>\n\n                <Toolbar className={classes.toolbar}>\n                    <Box display='flex' flexGrow={1}></Box>\n                    <CopyButton data={formatted} />\n                    <Button\n                        endIcon={<SaveIcon>Save As...</SaveIcon>}\n                        disabled={!formatted}\n                        variant='contained'\n                        color='primary'\n                        onClick={handleSaveAs}\n                    >\n                        Save As...\n                    </Button>\n                </Toolbar>\n\n                <SyntaxHighlighter style={syntaxTheme} language='json' className={classes.formatted}>\n                    {formatted}\n                </SyntaxHighlighter>\n            </div>\n        </>\n    );\n};\n\nexport function mapStateToProps(state: AppState) {\n    return {\n        inputText: state.textInputs['lastJSONFormatterValue'],\n    };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch) {\n    return {\n        storeInputText: (name: string, value: string) => dispatch(setTextAction(name, value)),\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withWidth()(JSONFormatter));\n","import { usePreferenceTheme } from \"../components/Preferences/PreferencesProvider\";\nimport { docco, dark } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n\nexport const useSyntaxHighlightTheme = () => {\n  const { isDark } = usePreferenceTheme();\n\n  return isDark ? dark : docco;\n};\n","import { saveAs } from 'file-saver';\n\nexport function saveJsonAs(jsonContent: string): void {\n    // Will be defined if the React App is running inside Electron\n    if (window.require) {\n        const ipc = window.require(\"electron\").ipcRenderer;\n        ipc.send('saveJsonAs', jsonContent);\n    } else {\n        var blob = new Blob([jsonContent], { type: 'application/json' });\n        saveAs(blob, 'data.json');\n    }\n}\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\n\nexports.default = _default;"],"sourceRoot":""}