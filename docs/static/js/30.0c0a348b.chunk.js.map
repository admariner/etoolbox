{"version":3,"sources":["services/encodings.ts","containers/CSVParser/services.ts","containers/CSVParser/styled.ts","containers/CSVParser/index.tsx","components/FeatureTitle/index.tsx","components/CopyButton/index.tsx","hooks/useSyntaxHighlightTheme.ts","services/file-utils.ts"],"names":["FILE_ENCODING_LABELS_SORTED","encodings","labels","name","heading","flatMap","entry","encoding","map","label","sort","a","b","DEFAULT_OPTIONS","delimiter","newline","undefined","quoteChar","escapeChar","header","transformHeader","_index","trim","dynamicTyping","preview","worker","comments","step","complete","error","download","downloadRequestHeaders","downloadRequestBody","skipEmptyLines","chunk","chunkSize","fastMode","beforeFirstChunk","withCredentials","transform","delimitersToGuess","Papa","RECORD_SEP","UNIT_SEP","csvData","options","csvOptions","parse","useStyles","makeStyles","theme","root","margin","spacing","fileSelector","textAlign","formControl","marginLeft","marginRight","minWidth","inputField","fontFamily","fontSize","whiteSpace","overflowY","toolbar","marginHorizontal","marginTop","padding","encodedResult","borderColor","palette","text","disabled","borderStyle","borderWidth","borderRadius","shape","wordBreak","mapStateToProps","state","inputText","textInputs","inputEncoding","inputOptions","mapDispatchToProps","dispatch","storeInputText","value","setTextAction","connect","props","title","classes","syntaxTheme","useSyntaxHighlightTheme","React","useState","transformed","setTransformed","rawParsedResult","setRawParsedResult","fileInfo","setFileInfo","isRunning","setIsRunning","isMdUp","useIsWidthUp","displayedRowsCount","useEffect","opts","JSON","services","result","stringify","data","Helmet","className","FeatureTitle","iconType","CSVParserIcon","Toolbar","Box","display","flexGrow","FormControl","sx","mr","type","color","accept","onChange","e","target","files","length","file","reader","FileReader","onload","ev","prettyBytes","size","find","enc","readAsText","onFileSelected","id","style","htmlFor","Button","variant","component","TextField","select","width","autoFocus","item","index","MenuItem","noValidate","autoComplete","Grid","container","md","sm","xs","helperText","multiline","minRows","maxRows","inputProps","fullWidth","Link","rel","href","endIcon","onClick","event","preventDefault","CopyButton","fileService","Typography","language","titleWithIcon","alignItems","titleContainer","justifyContent","icon","height","FeatureIcon","isDisabled","hoverMessage","feedbackMessage","Icon","AssignmentTurnedIn","others","setToasterState","useToasterUpdate","message","substring","copy","format","open","autoHideDuration","usePreferenceTheme","isDark","dark","docco","saveJsonAs","jsonContent","window","require","ipcRenderer","send","blob","Blob","saveAs"],"mappings":"8fAyVaA,EAzVwB,CACnC,CACEC,UAAW,CACT,CACEC,OAAQ,CAAC,oBAAqB,gBAAiB,gBAAiB,QAAS,OAAQ,mBACjFC,KAAM,UAGVC,QAAS,gBAEX,CACEH,UAAW,CACT,CACEC,OAAQ,CAAC,MAAO,QAAS,WAAY,UACrCC,KAAM,UAER,CACED,OAAQ,CACN,cACA,aACA,aACA,YACA,WACA,aACA,kBACA,KACA,UAEFC,KAAM,cAER,CACED,OAAQ,CACN,cACA,aACA,aACA,YACA,WACA,aACA,kBACA,KACA,UAEFC,KAAM,cAER,CACED,OAAQ,CACN,cACA,aACA,aACA,YACA,WACA,aACA,kBACA,KACA,UAEFC,KAAM,cAER,CACED,OAAQ,CACN,qBACA,WACA,aACA,aACA,YACA,WACA,aACA,mBAEFC,KAAM,cAER,CACED,OAAQ,CACN,SACA,WACA,cACA,cACA,mBACA,WACA,aACA,eACA,eACA,aACA,YACA,WACA,aACA,mBAEFC,KAAM,cAER,CACED,OAAQ,CACN,kBACA,WACA,WACA,QACA,SACA,aACA,aACA,YACA,WACA,aACA,kBACA,gBAEFC,KAAM,cAER,CACED,OAAQ,CACN,cACA,mBACA,SACA,aACA,eACA,aACA,YACA,WACA,aACA,kBACA,UAEFC,KAAM,cAER,CACED,OAAQ,CAAC,cAAe,eAAgB,WACxCC,KAAM,gBAER,CACED,OAAQ,CAAC,cAAe,cAAe,aAAc,aAAc,YAAa,KAAM,UACtFC,KAAM,eAER,CACED,OAAQ,CAAC,cAAe,aAAc,aACtCC,KAAM,eAER,CACED,OAAQ,CAAC,cAAe,aAAc,aACtCC,KAAM,eAER,CACED,OAAQ,CAAC,cAAe,cAAe,aAAc,YAAa,cAAe,MACjFC,KAAM,eAER,CACED,OAAQ,CAAC,eACTC,KAAM,eAER,CACED,OAAQ,CAAC,UAAW,MAAO,OAAQ,SAAU,UAC7CC,KAAM,UAER,CACED,OAAQ,CAAC,UAAW,UACpBC,KAAM,UAER,CACED,OAAQ,CAAC,cAAe,MAAO,YAAa,eAC5CC,KAAM,aAER,CACED,OAAQ,CAAC,UAAW,cAAe,aAAc,YAAa,UA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","file":"static/js/30.0c0a348b.chunk.js","sourcesContent":["export const FILE_ENCODING_ENTRIES = [\n  {\n    encodings: [\n      {\n        labels: ['unicode-1-1-utf-8', 'unicode11utf8', 'unicode20utf8', 'utf-8', 'utf8', 'x-unicode20utf8'],\n        name: 'UTF-8',\n      },\n    ],\n    heading: 'The Encoding',\n  },\n  {\n    encodings: [\n      {\n        labels: ['866', 'cp866', 'csibm866', 'ibm866'],\n        name: 'IBM866',\n      },\n      {\n        labels: [\n          'csisolatin2',\n          'iso-8859-2',\n          'iso-ir-101',\n          'iso8859-2',\n          'iso88592',\n          'iso_8859-2',\n          'iso_8859-2:1987',\n          'l2',\n          'latin2',\n        ],\n        name: 'ISO-8859-2',\n      },\n      {\n        labels: [\n          'csisolatin3',\n          'iso-8859-3',\n          'iso-ir-109',\n          'iso8859-3',\n          'iso88593',\n          'iso_8859-3',\n          'iso_8859-3:1988',\n          'l3',\n          'latin3',\n        ],\n        name: 'ISO-8859-3',\n      },\n      {\n        labels: [\n          'csisolatin4',\n          'iso-8859-4',\n          'iso-ir-110',\n          'iso8859-4',\n          'iso88594',\n          'iso_8859-4',\n          'iso_8859-4:1988',\n          'l4',\n          'latin4',\n        ],\n        name: 'ISO-8859-4',\n      },\n      {\n        labels: [\n          'csisolatincyrillic',\n          'cyrillic',\n          'iso-8859-5',\n          'iso-ir-144',\n          'iso8859-5',\n          'iso88595',\n          'iso_8859-5',\n          'iso_8859-5:1988',\n        ],\n        name: 'ISO-8859-5',\n      },\n      {\n        labels: [\n          'arabic',\n          'asmo-708',\n          'csiso88596e',\n          'csiso88596i',\n          'csisolatinarabic',\n          'ecma-114',\n          'iso-8859-6',\n          'iso-8859-6-e',\n          'iso-8859-6-i',\n          'iso-ir-127',\n          'iso8859-6',\n          'iso88596',\n          'iso_8859-6',\n          'iso_8859-6:1987',\n        ],\n        name: 'ISO-8859-6',\n      },\n      {\n        labels: [\n          'csisolatingreek',\n          'ecma-118',\n          'elot_928',\n          'greek',\n          'greek8',\n          'iso-8859-7',\n          'iso-ir-126',\n          'iso8859-7',\n          'iso88597',\n          'iso_8859-7',\n          'iso_8859-7:1987',\n          'sun_eu_greek',\n        ],\n        name: 'ISO-8859-7',\n      },\n      {\n        labels: [\n          'csiso88598e',\n          'csisolatinhebrew',\n          'hebrew',\n          'iso-8859-8',\n          'iso-8859-8-e',\n          'iso-ir-138',\n          'iso8859-8',\n          'iso88598',\n          'iso_8859-8',\n          'iso_8859-8:1988',\n          'visual',\n        ],\n        name: 'ISO-8859-8',\n      },\n      {\n        labels: ['csiso88598i', 'iso-8859-8-i', 'logical'],\n        name: 'ISO-8859-8-I',\n      },\n      {\n        labels: ['csisolatin6', 'iso-8859-10', 'iso-ir-157', 'iso8859-10', 'iso885910', 'l6', 'latin6'],\n        name: 'ISO-8859-10',\n      },\n      {\n        labels: ['iso-8859-13', 'iso8859-13', 'iso885913'],\n        name: 'ISO-8859-13',\n      },\n      {\n        labels: ['iso-8859-14', 'iso8859-14', 'iso885914'],\n        name: 'ISO-8859-14',\n      },\n      {\n        labels: ['csisolatin9', 'iso-8859-15', 'iso8859-15', 'iso885915', 'iso_8859-15', 'l9'],\n        name: 'ISO-8859-15',\n      },\n      {\n        labels: ['iso-8859-16'],\n        name: 'ISO-8859-16',\n      },\n      {\n        labels: ['cskoi8r', 'koi', 'koi8', 'koi8-r', 'koi8_r'],\n        name: 'KOI8-R',\n      },\n      {\n        labels: ['koi8-ru', 'koi8-u'],\n        name: 'KOI8-U',\n      },\n      {\n        labels: ['csmacintosh', 'mac', 'macintosh', 'x-mac-roman'],\n        name: 'macintosh',\n      },\n      {\n        labels: ['dos-874', 'iso-8859-11', 'iso8859-11', 'iso885911', 'tis-620', 'windows-874'],\n        name: 'windows-874',\n      },\n      {\n        labels: ['cp1250', 'windows-1250', 'x-cp1250'],\n        name: 'windows-1250',\n      },\n      {\n        labels: ['cp1251', 'windows-1251', 'x-cp1251'],\n        name: 'windows-1251',\n      },\n      {\n        labels: [\n          'ansi_x3.4-1968',\n          'ascii',\n          'cp1252',\n          'cp819',\n          'csisolatin1',\n          'ibm819',\n          'iso-8859-1',\n          'iso-ir-100',\n          'iso8859-1',\n          'iso88591',\n          'iso_8859-1',\n          'iso_8859-1:1987',\n          'l1',\n          'latin1',\n          'us-ascii',\n          'windows-1252',\n          'x-cp1252',\n        ],\n        name: 'windows-1252',\n      },\n      {\n        labels: ['cp1253', 'windows-1253', 'x-cp1253'],\n        name: 'windows-1253',\n      },\n      {\n        labels: [\n          'cp1254',\n          'csisolatin5',\n          'iso-8859-9',\n          'iso-ir-148',\n          'iso8859-9',\n          'iso88599',\n          'iso_8859-9',\n          'iso_8859-9:1989',\n          'l5',\n          'latin5',\n          'windows-1254',\n          'x-cp1254',\n        ],\n        name: 'windows-1254',\n      },\n      {\n        labels: ['cp1255', 'windows-1255', 'x-cp1255'],\n        name: 'windows-1255',\n      },\n      {\n        labels: ['cp1256', 'windows-1256', 'x-cp1256'],\n        name: 'windows-1256',\n      },\n      {\n        labels: ['cp1257', 'windows-1257', 'x-cp1257'],\n        name: 'windows-1257',\n      },\n      {\n        labels: ['cp1258', 'windows-1258', 'x-cp1258'],\n        name: 'windows-1258',\n      },\n      {\n        labels: ['x-mac-cyrillic', 'x-mac-ukrainian'],\n        name: 'x-mac-cyrillic',\n      },\n    ],\n    heading: 'Legacy single-byte encodings',\n  },\n  {\n    encodings: [\n      {\n        labels: [\n          'chinese',\n          'csgb2312',\n          'csiso58gb231280',\n          'gb2312',\n          'gb_2312',\n          'gb_2312-80',\n          'gbk',\n          'iso-ir-58',\n          'x-gbk',\n        ],\n        name: 'GBK',\n      },\n      {\n        labels: ['gb18030'],\n        name: 'gb18030',\n      },\n    ],\n    heading: 'Legacy multi-byte Chinese (simplified) encodings',\n  },\n  {\n    encodings: [\n      {\n        labels: ['big5', 'big5-hkscs', 'cn-big5', 'csbig5', 'x-x-big5'],\n        name: 'Big5',\n      },\n    ],\n    heading: 'Legacy multi-byte Chinese (traditional) encodings',\n  },\n  {\n    encodings: [\n      {\n        labels: ['cseucpkdfmtjapanese', 'euc-jp', 'x-euc-jp'],\n        name: 'EUC-JP',\n      },\n      {\n        labels: ['csiso2022jp', 'iso-2022-jp'],\n        name: 'ISO-2022-JP',\n      },\n      {\n        labels: ['csshiftjis', 'ms932', 'ms_kanji', 'shift-jis', 'shift_jis', 'sjis', 'windows-31j', 'x-sjis'],\n        name: 'Shift_JIS',\n      },\n    ],\n    heading: 'Legacy multi-byte Japanese encodings',\n  },\n  {\n    encodings: [\n      {\n        labels: [\n          'cseuckr',\n          'csksc56011987',\n          'euc-kr',\n          'iso-ir-149',\n          'korean',\n          'ks_c_5601-1987',\n          'ks_c_5601-1989',\n          'ksc5601',\n          'ksc_5601',\n          'windows-949',\n        ],\n        name: 'EUC-KR',\n      },\n    ],\n    heading: 'Legacy multi-byte Korean encodings',\n  },\n  {\n    encodings: [\n      {\n        labels: ['csiso2022kr', 'hz-gb-2312', 'iso-2022-cn', 'iso-2022-cn-ext', 'iso-2022-kr', 'replacement'],\n        name: 'replacement',\n      },\n      {\n        labels: ['unicodefffe', 'utf-16be'],\n        name: 'UTF-16BE',\n      },\n      {\n        labels: ['csunicode', 'iso-10646-ucs-2', 'ucs-2', 'unicode', 'unicodefeff', 'utf-16', 'utf-16le'],\n        name: 'UTF-16LE',\n      },\n      {\n        labels: ['x-user-defined'],\n        name: 'x-user-defined',\n      },\n    ],\n    heading: 'Legacy miscellaneous encodings',\n  },\n];\n\nexport type LabelAndName = {\n  label: string;\n  name: string;\n};\n\n/**\n * Sorted Map of each label to its normalized name: encoding.labels -> encoding.name :\n * [\n *  {\"label\":\"866\",\"name\":\"IBM866\"},\n *  {\"label\":\"ansi_x3.4-1968\",\"name\":\"windows-1252\"},\n *  {\"label\":\"arabic\",\"name\":\"ISO-8859-6\"},\n *  {\"label\":\"ascii\",\"name\":\"windows-1252\"},\n *  {\"label\":\"asmo-708\",\"name\":\"ISO-8859-6\"},\n *  ...\n * ]\n */\nexport const FILE_ENCODING_LABELS_SORTED: LabelAndName[] = FILE_ENCODING_ENTRIES.flatMap(entry =>\n  entry.encodings.flatMap(encoding =>\n    encoding.labels.map(label => ({\n      label,\n      name: encoding.name,\n    })),\n  ),\n).sort((a: LabelAndName, b: LabelAndName) => (a.label < b.label ? -1 : 1));\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport Papa, { ParseConfig, ParseResult } from 'papaparse';\n\nexport const DEFAULT_OPTIONS: any = {\n  delimiter: '', // auto-detect\n  newline: undefined, // auto-detect\n  quoteChar: '\"',\n  escapeChar: '\"',\n  header: true,\n  transformHeader: (header: string, _index: number) => header?.trim(),\n  dynamicTyping: true,\n  preview: 0,\n  encoding: undefined,\n  worker: false,\n  comments: false,\n  step: undefined,\n  complete: undefined,\n  error: undefined,\n  download: false,\n  downloadRequestHeaders: undefined,\n  downloadRequestBody: undefined,\n  skipEmptyLines: true,\n  chunk: undefined,\n  chunkSize: undefined,\n  fastMode: undefined,\n  beforeFirstChunk: undefined,\n  withCredentials: undefined,\n  transform: undefined,\n  delimitersToGuess: [',', '\\t', '|', ';', Papa.RECORD_SEP, Papa.UNIT_SEP],\n};\n\nexport const OPTIONS_DOC_URL = 'https://www.papaparse.com/docs#config';\n\ntype ParseConfigType = ParseConfig<any> & { download?: false | undefined; worker?: false | undefined };\n\n// @see https://www.papaparse.com/docs#config\nexport async function transform(\n  csvData: string,\n  options: ParseConfigType = DEFAULT_OPTIONS,\n): Promise<ParseResult<unknown>> {\n  const csvOptions = {\n    ...options,\n    transformHeader: (header: string, _index: number) => header?.trim(),\n  };\n\n  return Papa.parse(csvData, csvOptions);\n}\n","import { makeStyles } from '@mui/styles';\n\nexport const useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n  fileSelector: {\n    margin: theme.spacing(2),\n    textAlign: 'center',\n  },\n  formControl: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    minWidth: 120,\n  },\n  inputField: {\n    fontFamily: 'monospace',\n    fontSize: '0.8em',\n    whiteSpace: 'nowrap',\n    overflowY: 'scroll',\n  },\n  toolbar: {\n    marginHorizontal: 0,\n    marginTop: theme.spacing(2),\n    padding: 0,\n  },\n  encodedResult: {\n    padding: theme.spacing(1),\n    borderColor: theme.palette.text.disabled,\n    borderStyle: 'solid',\n    borderWidth: 1,\n    borderRadius: theme.shape.borderRadius,\n    whiteSpace: 'normal',\n    wordBreak: 'break-word',\n  },\n}));\n","import React from 'react';\n\nimport AccountTreeIcon from '@mui/icons-material/AccountTree';\nimport FileIcon from '@mui/icons-material/AttachmentOutlined';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport CSVParserIcon from '@mui/icons-material/GridOn';\nimport SaveIcon from '@mui/icons-material/Save';\nimport { Box, FormControl, Grid, Link, MenuItem, TextField, Toolbar, Typography } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport prettyBytes from 'pretty-bytes';\nimport { Helmet } from 'react-helmet';\nimport { connect } from 'react-redux';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { Dispatch } from 'redux';\n\nimport { setTextAction } from '../../actions/text-actions';\nimport CopyButton from '../../components/CopyButton';\nimport FeatureTitle from '../../components/FeatureTitle';\nimport { useSyntaxHighlightTheme } from '../../hooks/useSyntaxHighlightTheme';\nimport { AppState } from '../../reducers';\nimport { FILE_ENCODING_LABELS_SORTED, LabelAndName } from '../../services/encodings';\nimport * as fileService from '../../services/file-utils';\nimport { useIsWidthUp } from '../../theme';\nimport * as services from './services';\nimport { useStyles } from './styled';\n\ninterface Props {\n  inputText?: string;\n  inputEncoding?: string;\n  inputOptions?: string;\n  storeInputText: (name: string, value: string) => void;\n}\n\nconst CSVParser: React.FC<Props> = (props: Props) => {\n  const title = 'CSV parser';\n  const classes = useStyles();\n  const syntaxTheme = useSyntaxHighlightTheme();\n  const { inputText, inputEncoding, inputOptions, storeInputText } = props;\n  const [transformed, setTransformed] = React.useState('');\n  const [rawParsedResult, setRawParsedResult] = React.useState('');\n  const [fileInfo, setFileInfo] = React.useState('');\n  const [isRunning, setIsRunning] = React.useState(false);\n  const isMdUp = useIsWidthUp('md');\n  const displayedRowsCount = isMdUp ? 10 : 4;\n\n  const handleSaveAs = (event: React.MouseEvent<HTMLButtonElement>) => {\n    event.preventDefault();\n    fileService.saveJsonAs(transformed);\n  };\n\n  function handleClear(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault();\n    setTransformed('');\n    setRawParsedResult('');\n    setFileInfo('');\n    storeInputText('lastCSVInputContent', '');\n  }\n\n  function onFileSelected(e: React.ChangeEvent<HTMLInputElement>) {\n    if (!e?.target?.files || e.target.files.length === 0) {\n      return;\n    }\n\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (ev: ProgressEvent<FileReader>) => {\n      if (!ev.target) {\n        return;\n      }\n      storeInputText('lastCSVInputContent', ev.target.result as string);\n      setFileInfo(`${file.name} (${prettyBytes(file.size)})`);\n      e.target.value = '';\n    };\n    const encoding: LabelAndName | undefined = FILE_ENCODING_LABELS_SORTED.find(enc => enc.label === inputEncoding);\n    reader.readAsText(file, encoding?.name ?? 'utf-8');\n  }\n\n  React.useEffect(() => {\n    async function parse() {\n      if (!inputText) {\n        return;\n      }\n\n      try {\n        const opts = inputOptions ? JSON.parse(inputOptions) : services.DEFAULT_OPTIONS;\n        const result = await services.transform(inputText, opts);\n        setTransformed(JSON.stringify(result.data, null, 2));\n        setRawParsedResult(JSON.stringify(result, null, 2));\n        storeInputText('lastCSVInputOptions', JSON.stringify(opts, null, 2));\n        setIsRunning(false);\n      } catch (e) {\n        setIsRunning(false);\n      }\n    }\n\n    if (isRunning && inputText) {\n      parse();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isRunning, inputText]);\n\n  return (\n    <>\n      <Helmet title={title} />\n      <div className={classes.root}>\n        <FeatureTitle iconType={CSVParserIcon} title={title} />\n\n        <Toolbar className={classes.toolbar}>\n          <Box display=\"flex\" flexGrow={1}></Box>\n          <FormControl className={classes.formControl} sx={{ mr: 1 }}>\n            <input\n              type=\"file\"\n              color=\"primary\"\n              accept=\"text/csv\"\n              onChange={e => onFileSelected(e)}\n              id=\"icon-button-file\"\n              style={{ display: 'none' }}\n            />\n            <label htmlFor=\"icon-button-file\">\n              <Button variant=\"contained\" component=\"span\" color=\"primary\" title=\"Select the CSV file from your device\">\n                <FileIcon />\n              </Button>\n            </label>\n          </FormControl>\n\n          <FormControl className={classes.formControl}>\n            <TextField\n              select\n              label=\"File encoding\"\n              style={isMdUp ? { width: 320 } : undefined}\n              id=\"encoding\"\n              value={inputEncoding}\n              autoFocus={isMdUp}\n              onChange={e => storeInputText('lastCSVInputContentEncoding', e.target.value)}>\n              {FILE_ENCODING_LABELS_SORTED.map((item, index) => (\n                <MenuItem key={`${index}-${item.label}`} value={item.label}>\n                  {item.label} ({item.name})\n                </MenuItem>\n              ))}\n            </TextField>\n          </FormControl>\n        </Toolbar>\n\n        <form noValidate autoComplete=\"off\">\n          <Grid container spacing={1}>\n            <Grid item md={8} sm={12} xs={12}>\n              <TextField\n                name=\"inputText\"\n                label=\"CSV Source data\"\n                helperText={fileInfo}\n                multiline\n                minRows={displayedRowsCount}\n                maxRows={displayedRowsCount}\n                variant=\"outlined\"\n                margin=\"normal\"\n                inputProps={{\n                  style: {\n                    fontFamily: 'monospace',\n                    fontSize: '0.8em',\n                    whiteSpace: 'nowrap',\n                    overflowY: 'scroll',\n                  },\n                }}\n                fullWidth={true}\n                value={inputText}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  storeInputText('lastCSVInputContent', e.target.value)\n                }\n              />\n            </Grid>\n            <Grid item md={4} sm={12} xs={12}>\n              <TextField\n                name=\"inputOptions\"\n                label=\"Parser options\"\n                helperText={\n                  <Link target=\"_blank\" rel=\"noreferrer\" href={services.OPTIONS_DOC_URL}>\n                    Options documentation available here!\n                  </Link>\n                }\n                multiline\n                minRows={displayedRowsCount}\n                maxRows={displayedRowsCount}\n                variant=\"outlined\"\n                margin=\"normal\"\n                inputProps={{\n                  style: {\n                    fontFamily: 'monospace',\n                    fontSize: '0.8em',\n                    whiteSpace: 'nowrap',\n                    overflowY: 'scroll',\n                  },\n                }}\n                fullWidth={true}\n                value={inputOptions}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  storeInputText('lastCSVInputOptions', e.target.value)\n                }\n              />\n            </Grid>\n          </Grid>\n        </form>\n\n        <Toolbar className={classes.toolbar}>\n          <Box display=\"flex\" flexGrow={1}></Box>\n          <Button\n            sx={{ mr: 1 }}\n            variant=\"contained\"\n            title=\"Parse the CVS file content\"\n            color=\"primary\"\n            endIcon={<AccountTreeIcon>Run</AccountTreeIcon>}\n            disabled={!inputText || isRunning}\n            onClick={() => setIsRunning(true)}>\n            {isRunning ? 'Wait…' : 'Run'}\n          </Button>\n          <Button\n            sx={{ mr: 1 }}\n            variant=\"contained\"\n            title=\"Clear the content\"\n            color=\"primary\"\n            disabled={!inputText}\n            onClick={handleClear}>\n            <DeleteIcon />\n          </Button>\n          <CopyButton data={transformed} sx={{ mr: 1 }} />\n          <Button\n            endIcon={<SaveIcon>Save As...</SaveIcon>}\n            disabled={!transformed}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleSaveAs}>\n            Save…\n          </Button>\n        </Toolbar>\n\n        {transformed && (\n          <>\n            <Typography>Parsed rows:</Typography>\n            <SyntaxHighlighter style={syntaxTheme} language=\"json\" className={classes.encodedResult}>\n              {transformed}\n            </SyntaxHighlighter>\n            <Typography>Parsed result with metadata:</Typography>\n            <SyntaxHighlighter style={syntaxTheme} language=\"json\" className={classes.encodedResult}>\n              {rawParsedResult}\n            </SyntaxHighlighter>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport function mapStateToProps(state: AppState) {\n  return {\n    inputText: state.textInputs['lastCSVInputContent'],\n    inputEncoding: state.textInputs['lastCSVInputContentEncoding'],\n    inputOptions: state.textInputs['lastCSVInputOptions'],\n  };\n}\n\nexport function mapDispatchToProps(dispatch: Dispatch) {\n  return {\n    storeInputText: (name: string, value: string) => dispatch(setTextAction(name, value)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CSVParser);\n","import React, { ElementType } from 'react';\n\nimport { Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    wordBreak: 'break-word',\n  },\n  titleWithIcon: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  titleContainer: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  icon: {\n    height: '40px',\n    width: '40px',\n    marginRight: theme.spacing(1),\n  },\n}));\n\ninterface Props {\n  title: string;\n  iconType: ElementType;\n}\n\nconst FeatureTitle: React.FC<Props> = ({ title, iconType: FeatureIcon }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.titleContainer}>\n      <div className={classes.titleWithIcon}>\n        <FeatureIcon className={classes.icon} />\n        <Typography variant=\"h5\" className={classes.title}>\n          {title}\n        </Typography>\n      </div>\n    </div>\n  );\n};\n\nexport default FeatureTitle;\n","import React from 'react';\n\nimport AssignmentTurnedIn from '@mui/icons-material/AssignmentTurnedIn';\nimport { Button, ButtonProps, SvgIconTypeMap } from '@mui/material';\nimport { OverridableComponent } from '@mui/material/OverridableComponent';\nimport * as copy from 'copy-to-clipboard';\n\nimport { useToasterUpdate } from '../Toaster/ToasterProvider';\n\ntype Props = {\n  data?: string;\n  isDisabled?: boolean;\n  hoverMessage?: string;\n  feedbackMessage?: string;\n  Icon?: OverridableComponent<SvgIconTypeMap<unknown, 'svg'>>;\n} & ButtonProps;\n\nconst CopyButton: React.FC<Props> = ({\n  data,\n  isDisabled,\n  hoverMessage,\n  feedbackMessage,\n  Icon = AssignmentTurnedIn,\n  ...others\n}: Props) => {\n  const { setToasterState } = useToasterUpdate();\n\n  const handleCopy = () => {\n    if (!data) {\n      return;\n    }\n\n    const message = feedbackMessage ?? `Content copied into clipboard: ${data.substring(0, 25)} …`;\n\n    copy.default(data, { format: 'text/plain' });\n    setToasterState({ open: true, message, type: 'success', autoHideDuration: 2000 });\n  };\n\n  return (\n    <Button\n      {...others}\n      onClick={handleCopy}\n      disabled={!data || isDisabled}\n      title={hoverMessage ?? 'Copy to clipboard'}\n      variant=\"contained\"\n      color=\"primary\">\n      <Icon />\n    </Button>\n  );\n};\n\nexport default CopyButton;\n","import { dark, docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nimport { usePreferenceTheme } from '../components/Preferences/PreferencesProvider';\n\nexport const useSyntaxHighlightTheme = () => {\n  const { isDark } = usePreferenceTheme();\n\n  return isDark ? dark : docco;\n};\n","import { saveAs } from 'file-saver';\n\nexport function saveJsonAs(jsonContent: string): void {\n  // Will be defined if the React App is running inside Electron\n  if (window.require) {\n    const ipc = window.require('electron').ipcRenderer;\n    ipc.send('saveJsonAs', jsonContent);\n  } else {\n    const blob = new Blob([jsonContent], { type: 'application/json' });\n    saveAs(blob, 'data.json');\n  }\n}\n"],"sourceRoot":""}