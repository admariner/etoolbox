{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v1.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","containers/UUIDGenerator/services.ts","containers/UUIDGenerator/index.tsx","components/FeatureTitle/index.tsx","components/CopyButton/index.tsx","../node_modules/copy-to-clipboard/index.js","../node_modules/@material-ui/icons/AssignmentTurnedIn.js","../node_modules/toggle-selection/index.js","components/ResultMonospace/index.tsx","../node_modules/@material-ui/core/esm/TextField/TextField.js","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","Error","validate","byteToHex","i","push","toString","slice","unsafeStringify","arr","offset","toLowerCase","stringify","_nodeId","_clockseq","_lastMSecs","_lastNSecs","v1","options","buf","b","Array","node","clockseq","undefined","seedBytes","random","msecs","Date","now","nsecs","dt","tl","tmh","n","randomUUID","v4","native","rnds","generate","version","quantity","uuidGenerator","result","useStyles","makeStyles","theme","root","margin","spacing","form","marginTop","formControl","toolbar","marginLeft","withWidth","props","title","classes","useForm","defaultValues","handleSubmit","control","React","useState","services","generated","setGenerated","Helmet","className","FeatureTitle","iconType","SimCardIcon","Grid","container","item","md","sm","xs","FormControl","InputLabel","id","name","defaultValue","render","field","value","onChange","Select","labelId","autoFocus","isWidthUp","width","e","target","MenuItem","rules","required","min","max","FormHelperText","fieldState","invalid","error","TextField","label","type","helperText","justifyContent","CopyButton","data","Button","variant","color","onClick","endIcon","ResultMonospace","wordBreak","titleWithIcon","display","alignItems","titleContainer","icon","height","marginRight","FeatureIcon","setToasterState","useToasterUpdate","feedback","substr","message","copy","format","open","autoHideDuration","disabled","deselectCurrent","require","clipboardToIE11Formatting","module","exports","text","debug","reselectPrevious","range","selection","mark","success","document","createRange","getSelection","createElement","textContent","ariaHidden","style","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","addEventListener","stopPropagation","preventDefault","clipboardData","console","warn","window","clearData","setData","onCopy","body","appendChild","selectNodeContents","addRange","execCommand","err","copyKey","test","navigator","userAgent","replace","prompt","removeRange","removeAllRanges","removeChild","_interopRequireDefault","_interopRequireWildcard","Object","defineProperty","default","_default","d","rangeCount","active","activeElement","ranges","getRangeAt","tagName","toUpperCase","blur","forEach","focus","fontFamily","rows","maxRows","multiline","minRows","fullWidth","InputProps","input","variantComponent","standard","Input","filled","FilledInput","outlined","OutlinedInput","ref","autoComplete","_props$autoFocus","children","_props$color","_props$disabled","_props$error","FormHelperTextProps","_props$fullWidth","hiddenLabel","InputLabelProps","inputProps","inputRef","_props$multiline","onBlur","onFocus","placeholder","_props$required","rowsMax","_props$select","select","SelectProps","_props$variant","other","_objectWithoutProperties","InputMore","shrink","notched","_InputLabelProps$requ","displayRequired","helperTextId","concat","inputLabelId","InputComponent","InputElement","_extends","clsx","htmlFor","withStyles","_props$component","component","Component","focused","muiFormControl","useFormControl","fcs","formControlState","states","contained","marginDense","dangerouslySetInnerHTML","__html","palette","secondary","typography","caption","textAlign","main"],"mappings":"+HAGIA,E,mLACEC,EAAQ,IAAIC,WAAW,IACd,SAASC,IAEtB,IAAKH,KAEHA,EAAoC,qBAAXI,QAA0BA,OAAOJ,iBAAmBI,OAAOJ,gBAAgBK,KAAKD,SAGvG,MAAM,IAAIE,MAAM,4GAIpB,OAAON,EAAgBC,EACxB,CCTD,ICFeM,IDATC,EAAY,GAETC,EAAI,EAAGA,EAAI,MAAOA,EACzBD,EAAUE,MAAMD,EAAI,KAAOE,SAAS,IAAIC,MAAM,IAGzC,SAASC,EAAgBC,GAAiB,IAAZC,EAAY,uDAAH,EAG5C,OAAQP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,IAAMP,EAAUM,EAAIC,EAAS,IAAM,IAAMP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,KAAOP,EAAUM,EAAIC,EAAS,MAAMC,aACtf,CAgBcC,IE1BXC,EAEAC,EAGAC,EAAa,EACbC,EAAa,EAkFFC,MAhFf,SAAYC,EAASC,EAAKT,GACxB,IAAIN,EAAIe,GAAOT,GAAU,EACnBU,EAAID,GAAO,IAAIE,MAAM,IAEvBC,GADJJ,EAAUA,GAAW,CAAC,GACHI,MAAQT,EACvBU,OAAgCC,IAArBN,EAAQK,SAAyBL,EAAQK,SAAWT,EAInE,GAAY,MAARQ,GAA4B,MAAZC,EAAkB,CACpC,IAAME,EAAYP,EAAQQ,SAAWR,EAAQpB,KAAOA,KAExC,MAARwB,IAEFA,EAAOT,EAAU,CAAgB,EAAfY,EAAU,GAAWA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,KAG3F,MAAZF,IAEFA,EAAWT,EAAiD,OAApCW,EAAU,IAAM,EAAIA,EAAU,IAEzD,CAMD,IAAIE,OAA0BH,IAAlBN,EAAQS,MAAsBT,EAAQS,MAAQC,KAAKC,MAG3DC,OAA0BN,IAAlBN,EAAQY,MAAsBZ,EAAQY,MAAQd,EAAa,EAEjEe,EAAKJ,EAAQZ,GAAce,EAAQd,GAAc,IAavD,GAXIe,EAAK,QAA0BP,IAArBN,EAAQK,WACpBA,EAAWA,EAAW,EAAI,QAKvBQ,EAAK,GAAKJ,EAAQZ,SAAiCS,IAAlBN,EAAQY,QAC5CA,EAAQ,GAINA,GAAS,IACX,MAAM,IAAI7B,MAAM,mDAGlBc,EAAaY,EACbX,EAAac,EACbhB,EAAYS,EAIZ,IAAMS,GAA4B,KAAb,WAFrBL,GAAS,cAEiCG,GAAS,WACnDV,EAAEhB,KAAO4B,IAAO,GAAK,IACrBZ,EAAEhB,KAAO4B,IAAO,GAAK,IACrBZ,EAAEhB,KAAO4B,IAAO,EAAI,IACpBZ,EAAEhB,KAAY,IAAL4B,EAET,IAAMC,EAAMN,EAAQ,WAAc,IAAQ,UAC1CP,EAAEhB,KAAO6B,IAAQ,EAAI,IACrBb,EAAEhB,KAAa,IAAN6B,EAETb,EAAEhB,KAAO6B,IAAQ,GAAK,GAAM,GAE5Bb,EAAEhB,KAAO6B,IAAQ,GAAK,IAEtBb,EAAEhB,KAAOmB,IAAa,EAAI,IAE1BH,EAAEhB,KAAkB,IAAXmB,EAET,IAAK,IAAIW,EAAI,EAAGA,EAAI,IAAKA,EACvBd,EAAEhB,EAAI8B,GAAKZ,EAAKY,GAGlB,OAAOf,GAAOX,EAAgBY,EAC/B,EC3Fc,GACbe,WAFmC,qBAAXpC,QAA0BA,OAAOoC,YAAcpC,OAAOoC,WAAWnC,KAAKD,SC4BjFqC,MAxBf,SAAYlB,EAASC,EAAKT,GACxB,GAAI2B,EAAOF,aAAehB,IAAQD,EAChC,OAAOmB,EAAOF,aAIhB,IAAMG,GADNpB,EAAUA,GAAW,CAAC,GACDQ,SAAWR,EAAQpB,KAAOA,KAK/C,GAHAwC,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBnB,EAAK,CACPT,EAASA,GAAU,EAEnB,IAAK,IAAIN,EAAI,EAAGA,EAAI,KAAMA,EACxBe,EAAIT,EAASN,GAAKkC,EAAKlC,GAGzB,OAAOe,CACR,CAED,OAAOX,EAAgB8B,EACxB,ECxBM,SAASC,EAASC,EAAiBC,GAItC,IAHA,IAAMC,EAA4B,IAAZF,EAAgBvB,EAAKmB,EAEvCO,EAAS,GACJvC,EAAI,EAAGA,EAAIqC,EAAUrC,IAC1BuC,GAAM,UAAOD,IAAP,MAIV,OAAOC,EAAOpC,MAAM,GAAI,EAC3B,C,WCEKqC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,OAAQF,EAAMG,QAAQ,IAE1BC,KAAM,CACFC,UAAWL,EAAMG,QAAQ,IAE7BG,YAAa,CACTJ,OAAQF,EAAMG,QAAQ,IAE1BI,QAAS,CACL,QAAS,CACLC,WAAYR,EAAMG,QAAQ,GAC1BE,UAAWL,EAAMG,QAAQ,KAbH,IA2HnBM,yBAhGwB,SAACC,GACpC,IAAMC,EAAQ,iBACRC,EAAUd,IAKhB,EAAkCe,YAAQ,CAAEC,cAJtB,CAClBpB,QAAS,EACTC,SAAU,KAENoB,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,QACtB,EAAkCC,IAAMC,SAASC,EAAkB,EAAG,IAAtE,mBAAOC,EAAP,KAAkBC,EAAlB,KAMA,OACI,qCACI,cAACC,EAAA,EAAD,CAAQX,MAAOA,IACf,sBAAKY,UAAWX,EAAQX,KAAxB,UACI,cAACuB,EAAA,EAAD,CAAcC,SAAUC,IAAaf,MAAOA,IAE5C,qBAAKY,UAAWX,EAAQR,KAAxB,SACI,eAACuB,EAAA,EAAD,CAAMC,WAAS,EAACzB,QAAS,EAAzB,UACI,cAACwB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,eAACC,EAAA,EAAD,CAAaV,UAAWX,EAAQN,YAAhC,UACI,cAAC4B,EAAA,EAAD,CAAYC,GAAG,mBAAf,qBACA,cAAC,IAAD,CACInB,QAASA,EACToB,KAAK,UACLC,aAAc,EACdC,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,MAAOJ,EAAnB,EAAmBA,KAAMK,EAAzB,EAAyBA,SAAzB,OACJ,eAACC,EAAA,EAAD,CACIN,KAAMA,EACNI,MAAOA,EACPG,QAAQ,mBACRC,UAAWC,YAAU,KAAMnC,EAAMoC,OACjCL,SAAU,SAAAM,GAAC,OAAIN,EAASM,EAAEC,OAAOR,MAAtB,EALf,UAMI,cAACS,EAAA,EAAD,CAAUT,MAAO,EAAjB,eACA,cAACS,EAAA,EAAD,CAAUT,MAAO,EAAjB,iBARA,EAWRU,MAAO,CACHC,UAAU,EACVC,IAAK,EACLC,IAAK,KAGb,cAACC,EAAA,EAAD,mCAGR,cAAC3B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAA7B,SACI,eAACC,EAAA,EAAD,CAAaV,UAAWX,EAAQN,YAAhC,UACI,cAAC,IAAD,CACI8B,KAAK,WACLE,OAAQ,oBAAGC,MAASC,EAAZ,EAAYA,MAAOJ,EAAnB,EAAmBA,KAAMK,EAAzB,EAAyBA,SAAzB,IAAqCc,WAAcC,EAAnD,EAAmDA,QAAnD,EAA4DC,MAA5D,OACJ,cAACC,EAAA,EAAD,CACItB,KAAMA,EACNI,MAAOA,EACPmB,MAAM,WACNF,MAAOD,EACPI,KAAK,SACLnB,SAAU,SAAAM,GAAC,OAAIN,EAASM,EAAEC,OAAOR,MAAtB,EACXqB,WAAYL,EAAU,yBAA2B,MARjD,EAWRxC,QAASA,EACTqB,aAAc,EACda,MAAO,CACHC,UAAU,EACVC,IAAK,EACLC,IAAK,QAGb,cAACC,EAAA,EAAD,mCAGR,cAAC3B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAA7B,SACI,eAACL,EAAA,EAAD,CAAMC,WAAS,EAACkC,eAAe,WAAWvC,UAAWX,EAAQL,QAA7D,UACI,cAACwD,EAAA,EAAD,CAAYC,KAAM5C,IAClB,cAAC6C,EAAA,EAAD,CACIC,QAAQ,YACRC,MAAM,UACNC,QAASrD,GAvExB,SAACiD,GACd3C,EAAaF,EAAkB6C,EAAKtE,QAASsE,EAAKrE,UACrD,IAsE+B0E,QAAS,cAAC,IAAD,IAJb,gCAYhB,cAACC,EAAA,EAAD,CAAiBX,MAAM,SAAS9D,OAAQuB,SAIvD,G,mCCvID,mCAIMtB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCW,MAAO,CACH4D,UAAW,cAEfC,cAAe,CACXC,QAAS,OACTC,WAAY,UAEhBC,eAAgB,CACZF,QAAS,OACTX,eAAgB,UAEpBc,KAAM,CACFC,OAAQ,OACR/B,MAAO,OACPgC,YAAa9E,EAAMG,QAAQ,IAfD,IAwCnBqB,IAhBuB,SAACd,GACnC,IAAME,EAAUd,IACViF,EAAcrE,EAAMe,SAE1B,OACI,qBAAKF,UAAWX,EAAQ+D,eAAxB,SACI,sBAAKpD,UAAWX,EAAQ4D,cAAxB,UACI,cAACO,EAAD,CAAaxD,UAAWX,EAAQgE,OAChC,cAAC,IAAD,CAAYV,QAAQ,KAAK3C,UAAWX,EAAQD,MAA5C,SACKD,EAAMC,YAK1B,C,mCC1CD,uEAgCeoD,IAtBqB,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,KAC3BgB,EAAoBC,cAApBD,gBAcR,OACI,cAAC,IAAD,CAAQZ,QAbO,WACf,GAAKJ,EAAL,CAIA,IAAMkB,EAAWlB,EAAKmB,OAAO,EAAG,IAC1BC,EAAO,yCAAqCF,EAArC,WAEbG,IAAarB,EAAM,CAAEsB,OAAQ,eAC7BN,EAAgB,CAAEO,MAAM,EAAMH,UAASxB,KAAM,UAAW4B,iBAAkB,KANzE,CAOJ,EAGgCC,UAAWzB,EAAMrD,MAAM,oBAAoBuD,QAAQ,YAAYC,MAAM,UAAlG,SACI,cAAC,IAAD,KAGX,C,mCC5BD,IAAIuB,EAAkBC,EAAQ,KAE1BC,EAA4B,CAC9B,aAAc,OACd,YAAa,MACb,QAAW,QA2GbC,EAAOC,QAjGP,SAAcC,EAAM3H,GAClB,IAAI4H,EACFZ,EACAa,EACAC,EACAC,EACAC,EACAC,GAAU,EACPjI,IACHA,EAAU,CAAC,GAEb4H,EAAQ5H,EAAQ4H,QAAS,EACzB,IAkDE,GAjDAC,EAAmBP,IAEnBQ,EAAQI,SAASC,cACjBJ,EAAYG,SAASE,gBAErBJ,EAAOE,SAASG,cAAc,SACzBC,YAAcX,EAEnBK,EAAKO,WAAa,OAElBP,EAAKQ,MAAMC,IAAM,QAEjBT,EAAKQ,MAAME,SAAW,QACtBV,EAAKQ,MAAMG,IAAM,EACjBX,EAAKQ,MAAMI,KAAO,mBAElBZ,EAAKQ,MAAMK,WAAa,MAExBb,EAAKQ,MAAMM,iBAAmB,OAC9Bd,EAAKQ,MAAMO,cAAgB,OAC3Bf,EAAKQ,MAAMQ,aAAe,OAC1BhB,EAAKQ,MAAMS,WAAa,OACxBjB,EAAKkB,iBAAiB,QAAQ,SAASvE,GAErC,GADAA,EAAEwE,kBACEnJ,EAAQkH,OAEV,GADAvC,EAAEyE,iBAC6B,qBAApBzE,EAAE0E,cAA+B,CAC1CzB,GAAS0B,QAAQC,KAAK,iCACtB3B,GAAS0B,QAAQC,KAAK,4BACtBC,OAAOH,cAAcI,YACrB,IAAIvC,EAASM,EAA0BxH,EAAQkH,SAAWM,EAAyB,QACnFgC,OAAOH,cAAcK,QAAQxC,EAAQS,EACtC,MACChD,EAAE0E,cAAcI,YAChB9E,EAAE0E,cAAcK,QAAQ1J,EAAQkH,OAAQS,GAGxC3H,EAAQ2J,SACVhF,EAAEyE,iBACFpJ,EAAQ2J,OAAOhF,EAAE0E,eAEpB,IAEDnB,SAAS0B,KAAKC,YAAY7B,GAE1BF,EAAMgC,mBAAmB9B,GACzBD,EAAUgC,SAASjC,IAEFI,SAAS8B,YAAY,QAEpC,MAAM,IAAIjL,MAAM,iCAElBkJ,GAAU,CA2BX,CA1BC,MAAOgC,GACPrC,GAAS0B,QAAQjE,MAAM,qCAAsC4E,GAC7DrC,GAAS0B,QAAQC,KAAK,4BACtB,IACEC,OAAOH,cAAcK,QAAQ1J,EAAQkH,QAAU,OAAQS,GACvD3H,EAAQ2J,QAAU3J,EAAQ2J,OAAOH,OAAOH,eACxCpB,GAAU,CAMX,CALC,MAAOgC,GACPrC,GAAS0B,QAAQjE,MAAM,uCAAwC4E,GAC/DrC,GAAS0B,QAAQjE,MAAM,0BACvB2B,EAjFN,SAAgBA,GACd,IAAIkD,GAAW,YAAYC,KAAKC,UAAUC,WAAa,SAAM,QAAU,KACvE,OAAOrD,EAAQsD,QAAQ,gBAAiBJ,EACzC,CA8EehD,CAAO,YAAalH,EAAUA,EAAQgH,QAnFjC,oCAoFfwC,OAAOe,OAAOvD,EAASW,EACxB,CACF,CAnED,QAoEMI,IACkC,mBAAzBA,EAAUyC,YACnBzC,EAAUyC,YAAY1C,GAEtBC,EAAU0C,mBAIVzC,GACFE,SAAS0B,KAAKc,YAAY1C,GAE5BH,GACD,CAED,OAAOI,CACR,C,mCC9GD,IAAI0C,EAAyBpD,EAAQ,IAEjCqD,EAA0BrD,EAAQ,IAEtCsD,OAAOC,eAAepD,EAAS,aAAc,CAC3CtD,OAAO,IAETsD,EAAQqD,aAAU,EAElB,IAAIlI,EAAQ+H,EAAwBrD,EAAQ,IAIxCyD,GAAW,EAFML,EAAuBpD,EAAQ,KAElBwD,SAAuBlI,EAAMwF,cAAc,OAAQ,CACnF4C,EAAG,0OACD,sBAEJvD,EAAQqD,QAAUC,C,oBClBlBvD,EAAOC,QAAU,WACf,IAAIK,EAAYG,SAASE,eACzB,IAAKL,EAAUmD,WACb,OAAO,WAAc,EAKvB,IAHA,IAAIC,EAASjD,SAASkD,cAElBC,EAAS,GACJnM,EAAI,EAAGA,EAAI6I,EAAUmD,WAAYhM,IACxCmM,EAAOlM,KAAK4I,EAAUuD,WAAWpM,IAGnC,OAAQiM,EAAOI,QAAQC,eACrB,IAAK,QACL,IAAK,WACHL,EAAOM,OACP,MAEF,QACEN,EAAS,KAKb,OADApD,EAAU0C,kBACH,WACc,UAAnB1C,EAAUvC,MACVuC,EAAU0C,kBAEL1C,EAAUmD,YACbG,EAAOK,SAAQ,SAAS5D,GACtBC,EAAUgC,SAASjC,EACpB,IAGHqD,GACAA,EAAOQ,OACR,CACF,C,mCCtCD,oCAIMjK,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCH,OAAQ,CACJmK,WAAY,YACZnF,OAAQ,QAHkB,IAoCnBP,IAtBgB,SAAC,GAAuD,IAArDX,EAAoD,EAApDA,MAAO9D,EAA6C,EAA7CA,OAA6C,IAArCoK,YAAqC,MAA9B,GAA8B,MAA1BC,eAA0B,MAAhB,GAAgB,EAC5EtJ,EAAUd,IAEhB,OACI,cAAC,IAAD,CACIqK,WAAS,EACTC,QAASH,EACTC,QAASA,EACTvG,MAAOA,EACPO,QAAQ,WACRhE,OAAO,SACPmK,WAAW,EACX7H,MAAO3C,EACPyK,WAAY,CACR1J,QAAS,CACL2J,MAAO3J,EAAQf,UAKlC,C,mCCtCD,4GAeI2K,EAAmB,CACrBC,SAAUC,IACVC,OAAQC,IACRC,SAAUC,KAuCRpH,EAAyBzC,cAAiB,SAAmBP,EAAOqK,GACtE,IAAIC,EAAetK,EAAMsK,aACrBC,EAAmBvK,EAAMkC,UACzBA,OAAiC,IAArBqI,GAAsCA,EAClDC,EAAWxK,EAAMwK,SACjBtK,EAAUF,EAAME,QAChBW,EAAYb,EAAMa,UAClB4J,EAAezK,EAAMyD,MACrBA,OAAyB,IAAjBgH,EAA0B,UAAYA,EAC9C9I,EAAe3B,EAAM2B,aACrB+I,EAAkB1K,EAAM+E,SACxBA,OAA+B,IAApB2F,GAAqCA,EAChDC,EAAe3K,EAAM+C,MACrBA,OAAyB,IAAjB4H,GAAkCA,EAC1CC,EAAsB5K,EAAM4K,oBAC5BC,EAAmB7K,EAAM2J,UACzBA,OAAiC,IAArBkB,GAAsCA,EAClD1H,EAAanD,EAAMmD,WACnB2H,EAAc9K,EAAM8K,YACpBrJ,EAAKzB,EAAMyB,GACXsJ,EAAkB/K,EAAM+K,gBACxBC,EAAahL,EAAMgL,WACnBpB,EAAa5J,EAAM4J,WACnBqB,EAAWjL,EAAMiL,SACjBhI,EAAQjD,EAAMiD,MACdiI,EAAmBlL,EAAMyJ,UACzBA,OAAiC,IAArByB,GAAsCA,EAClDxJ,EAAO1B,EAAM0B,KACbyJ,EAASnL,EAAMmL,OACfpJ,EAAW/B,EAAM+B,SACjBqJ,EAAUpL,EAAMoL,QAChBC,EAAcrL,EAAMqL,YACpBC,EAAkBtL,EAAMyC,SACxBA,OAA+B,IAApB6I,GAAqCA,EAChD/B,EAAOvJ,EAAMuJ,KACbgC,EAAUvL,EAAMuL,QAChB/B,EAAUxJ,EAAMwJ,QAChBE,EAAU1J,EAAM0J,QAChB8B,EAAgBxL,EAAMyL,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5CE,EAAc1L,EAAM0L,YACpBxI,EAAOlD,EAAMkD,KACbpB,EAAQ9B,EAAM8B,MACd6J,EAAiB3L,EAAMwD,QACvBA,QAA6B,IAAnBmI,EAA4B,WAAaA,EACnDC,GAAQC,YAAyB7L,EAAO,CAAC,eAAgB,YAAa,WAAY,UAAW,YAAa,QAAS,eAAgB,WAAY,QAAS,sBAAuB,YAAa,aAAc,cAAe,KAAM,kBAAmB,aAAc,aAAc,WAAY,QAAS,YAAa,OAAQ,SAAU,WAAY,UAAW,cAAe,WAAY,OAAQ,UAAW,UAAW,UAAW,SAAU,cAAe,OAAQ,QAAS,YAQ3c,IAAI8L,GAAY,CAAC,EAEjB,GAAgB,aAAZtI,KACEuH,GAAqD,qBAA3BA,EAAgBgB,SAC5CD,GAAUE,QAAUjB,EAAgBgB,QAGlC9I,GAAO,CACT,IAAIgJ,GAEAC,GAA2I,QAAxHD,GAA4C,OAApBlB,QAAgD,IAApBA,OAA6B,EAASA,EAAgBtI,gBAAgD,IAA1BwJ,GAAmCA,GAAwBxJ,EAClNqJ,GAAU7I,MAAqB1C,gBAAoBA,WAAgB,KAAM0C,EAAOiJ,IAAmB,QACpG,CAGCT,IAEGC,GAAgBA,EAAY7M,SAC/BiN,GAAUrK,QAAKzD,GAGjB8N,GAAU,yBAAsB9N,GAGlC,IAAImO,GAAehJ,GAAc1B,EAAK,GAAG2K,OAAO3K,EAAI,qBAAkBzD,EAClEqO,GAAepJ,GAASxB,EAAK,GAAG2K,OAAO3K,EAAI,eAAYzD,EACvDsO,GAAiBxC,EAAiBtG,IAClC+I,GAA4BhM,gBAAoB+L,GAAgBE,YAAS,CAC3E,mBAAoBL,GACpB7B,aAAcA,EACdpI,UAAWA,EACXP,aAAcA,EACdgI,UAAWA,EACXF,UAAWA,EACX/H,KAAMA,EACN6H,KAAMA,EACNgC,QAASA,EACT/B,QAASA,EACTE,QAASA,EACTxG,KAAMA,EACNpB,MAAOA,EACPL,GAAIA,EACJwJ,SAAUA,EACVE,OAAQA,EACRpJ,SAAUA,EACVqJ,QAASA,EACTC,YAAaA,EACbL,WAAYA,GACXc,GAAWlC,IACd,OAAoBrJ,gBAAoBgB,IAAaiL,YAAS,CAC5D3L,UAAW4L,YAAKvM,EAAQX,KAAMsB,GAC9BkE,SAAUA,EACVhC,MAAOA,EACP4G,UAAWA,EACXmB,YAAaA,EACbT,IAAKA,EACL5H,SAAUA,EACVgB,MAAOA,EACPD,QAASA,IACRoI,IAAQ3I,GAAsB1C,gBAAoBiB,IAAYgL,YAAS,CACxEE,QAASjL,EACTA,GAAI4K,IACHtB,GAAkB9H,GAAQwI,EAAsBlL,gBAAoByB,IAAQwK,YAAS,CACtF,mBAAoBL,GACpB1K,GAAIA,EACJQ,QAASoK,GACTvK,MAAOA,EACP+H,MAAO0C,IACNb,GAAclB,GAAY+B,GAAcpJ,GAA2B5C,gBAAoBqC,IAAgB4J,YAAS,CACjH/K,GAAI0K,IACHvB,GAAsBzH,GAC1B,IA6McwJ,gBA9WK,CAElBpN,KAAM,CAAC,GA4WyB,CAChCmC,KAAM,gBADOiL,CAEZ3J,E,mCCpYH,yDAoDIJ,EAA8BrC,cAAiB,SAAwBP,EAAOqK,GAChF,IAAIG,EAAWxK,EAAMwK,SACjBtK,EAAUF,EAAME,QAChBW,EAAYb,EAAMa,UAClB+L,EAAmB5M,EAAM6M,UACzBC,OAAiC,IAArBF,EAA8B,IAAMA,EAQhDhB,GAPW5L,EAAM+E,SACT/E,EAAM+C,MACL/C,EAAMiK,OACLjK,EAAM+M,QACP/M,EAAMR,OACJQ,EAAMyC,SACPzC,EAAMwD,QACRqI,YAAyB7L,EAAO,CAAC,WAAY,UAAW,YAAa,YAAa,WAAY,QAAS,SAAU,UAAW,SAAU,WAAY,aAE1JgN,EAAiBC,cACjBC,EAAMC,YAAiB,CACzBnN,MAAOA,EACPgN,eAAgBA,EAChBI,OAAQ,CAAC,UAAW,SAAU,WAAY,QAAS,SAAU,UAAW,cAE1E,OAAoB7M,gBAAoBuM,EAAWN,YAAS,CAC1D3L,UAAW4L,YAAKvM,EAAQX,MAAuB,WAAhB2N,EAAI1J,SAAwC,aAAhB0J,EAAI1J,UAA2BtD,EAAQmN,UAAWxM,EAAWqM,EAAInI,UAAY7E,EAAQ6E,SAAUmI,EAAInK,OAAS7C,EAAQ6C,MAAOmK,EAAIjD,QAAU/J,EAAQ+J,OAAQiD,EAAIH,SAAW7M,EAAQ6M,QAASG,EAAIzK,UAAYvC,EAAQuC,SAAyB,UAAfyK,EAAI1N,QAAsBU,EAAQoN,aACxTjD,IAAKA,GACJuB,GAAqB,MAAbpB,EAGXjK,gBAAoB,OAAQ,CAC1BgN,wBAAyB,CACvBC,OAAQ,aAEPhD,EACN,IAqEcmC,iBAjJK,SAAgBrN,GAClC,MAAO,CAELC,KAAMiN,YAAS,CACb/I,MAAOnE,EAAMmO,QAAQpI,KAAKqI,WACzBpO,EAAMqO,WAAWC,QAAS,CAC3BC,UAAW,OACXlO,UAAW,EACXH,OAAQ,EACR,aAAc,CACZiE,MAAOnE,EAAMmO,QAAQpI,KAAKN,UAE5B,UAAW,CACTtB,MAAOnE,EAAMmO,QAAQ1K,MAAM+K,QAK/B/K,MAAO,CAAC,EAGRgC,SAAU,CAAC,EAGXuI,YAAa,CACX3N,UAAW,GAIb0N,UAAW,CACTvN,WAAY,GACZsE,YAAa,IAIf2I,QAAS,CAAC,EAGV9C,OAAQ,CAAC,EAGTxH,SAAU,CAAC,EAEd,GAsGiC,CAChCf,KAAM,qBADOiL,CAEZ/J,E","file":"static/js/20.ebd1011d.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport { unsafeStringify } from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || unsafeStringify(b);\n}\n\nexport default v1;","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","import { v1, v4 } from 'uuid';\n\nexport function generate(version: number, quantity: number): string {\n    const uuidGenerator = version === 1 ? v1 : v4;\n\n    let result = '';\n    for (let i = 0; i < quantity; i++) {\n        result += `${uuidGenerator()}\\n`;\n    }\n\n    // Return result without last line feed\n    return result.slice(0, -1);\n}\n","import { FormControl, FormHelperText, Grid, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\nimport withWidth, { isWidthUp } from '@material-ui/core/withWidth';\nimport SimCardIcon from '@material-ui/icons/SimCard';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Controller, useForm } from 'react-hook-form';\nimport CopyButton from '../../components/CopyButton';\nimport FeatureTitle from '../../components/FeatureTitle';\nimport ResultMonospace from '../../components/ResultMonospace';\nimport * as services from './services';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: theme.spacing(1),\n    },\n    form: {\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n    },\n    toolbar: {\n        '& > *': {\n            marginLeft: theme.spacing(1),\n            marginTop: theme.spacing(1),\n        },\n    },\n}));\n\ninterface UUIDForm {\n    version: number;\n    quantity: number;\n}\n\ninterface Props {\n    width: Breakpoint;\n}\n\nconst UUIDGenerator: React.FC<Props> = (props: Props) => {\n    const title = 'UUID Generator';\n    const classes = useStyles();\n    const defaultValues = {\n        version: 4,\n        quantity: 5,\n    };\n    const { handleSubmit, control } = useForm({ defaultValues });\n    const [generated, setGenerated] = React.useState(services.generate(4, 1));\n\n    const onSubmit = (data: UUIDForm) => {\n        setGenerated(services.generate(data.version, data.quantity));\n    };\n\n    return (\n        <>\n            <Helmet title={title} />\n            <div className={classes.root}>\n                <FeatureTitle iconType={SimCardIcon} title={title} />\n\n                <div className={classes.form}>\n                    <Grid container spacing={1}>\n                        <Grid item md={2} sm={3} xs={6}>\n                            <FormControl className={classes.formControl}>\n                                <InputLabel id=\"uuidVersionLabel\">Version</InputLabel>\n                                <Controller\n                                    control={control}\n                                    name=\"version\"\n                                    defaultValue={4}\n                                    render={({ field: { value, name, onChange } }) => (\n                                        <Select\n                                            name={name}\n                                            value={value}\n                                            labelId=\"uuidVersionLabel\"\n                                            autoFocus={isWidthUp('md', props.width)}\n                                            onChange={e => onChange(e.target.value)}>\n                                            <MenuItem value={1}>1</MenuItem>\n                                            <MenuItem value={4}>4</MenuItem>\n                                        </Select>\n                                    )}\n                                    rules={{\n                                        required: true,\n                                        min: 1,\n                                        max: 5,\n                                    }}\n                                />\n                                <FormHelperText>RFC4122 version</FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item md={2} sm={3} xs={6}>\n                            <FormControl className={classes.formControl}>\n                                <Controller\n                                    name=\"quantity\"\n                                    render={({ field: { value, name, onChange }, fieldState: { invalid, error } }) => (\n                                        <TextField\n                                            name={name}\n                                            value={value}\n                                            label=\"Quantity\"\n                                            error={invalid}\n                                            type=\"number\"\n                                            onChange={e => onChange(e.target.value)}\n                                            helperText={invalid ? 'valid range: [1..9999]' : null}\n                                        />\n                                    )}\n                                    control={control}\n                                    defaultValue={5}\n                                    rules={{\n                                        required: true,\n                                        min: 1,\n                                        max: 9999,\n                                    }}\n                                />\n                                <FormHelperText>Number of UUIDs</FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item md={8} sm={6} xs={12}>\n                            <Grid container justifyContent=\"flex-end\" className={classes.toolbar}>\n                                <CopyButton data={generated} />\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleSubmit(onSubmit)}\n                                    endIcon={<SimCardIcon />}>\n                                    Generate\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n\n                <ResultMonospace label=\"Result\" result={generated} />\n            </div>\n        </>\n    );\n};\n\nexport default withWidth()(UUIDGenerator);\n","import { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        wordBreak: 'break-word',\n    },\n    titleWithIcon: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    titleContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    icon: {\n        height: '40px',\n        width: '40px',\n        marginRight: theme.spacing(1),\n    },\n}));\n\ninterface Props {\n    title: string;\n    iconType: any;\n}\n\nconst FeatureTitle: React.FC<Props> = (props: Props) => {\n    const classes = useStyles();\n    const FeatureIcon = props.iconType;\n\n    return (\n        <div className={classes.titleContainer}>\n            <div className={classes.titleWithIcon}>\n                <FeatureIcon className={classes.icon} />\n                <Typography variant=\"h5\" className={classes.title}>\n                    {props.title}\n                </Typography>\n            </div>\n        </div>\n    );\n};\n\nexport default FeatureTitle;\n","import { Button } from '@material-ui/core';\nimport AssignmentTurnedIn from '@material-ui/icons/AssignmentTurnedIn';\nimport * as copy from 'copy-to-clipboard';\nimport React from 'react';\nimport { useToasterUpdate } from '../Toaster/ToasterProvider';\n\ninterface Props {\n    data?: string;\n}\n\nconst CopyButton: React.FC<Props> = ({ data }: Props) => {\n    const { setToasterState } = useToasterUpdate();\n\n    const handleCopy = () => {\n        if (!data) {\n            return;\n        }\n\n        const feedback = data.substr(0, 20);\n        const message = `Content copied into clipboard: ${feedback} …`;\n\n        copy.default(data, { format: 'text/plain' });\n        setToasterState({ open: true, message, type: 'success', autoHideDuration: 2000 });\n    };\n\n    return (\n        <Button onClick={handleCopy} disabled={!data} title=\"Copy to clipboard\" variant=\"contained\" color=\"primary\">\n            <AssignmentTurnedIn />\n        </Button>\n    );\n};\n\nexport default CopyButton;\n","\"use strict\";\n\nvar deselectCurrent = require(\"toggle-selection\");\n\nvar clipboardToIE11Formatting = {\n  \"text/plain\": \"Text\",\n  \"text/html\": \"Url\",\n  \"default\": \"Text\"\n}\n\nvar defaultMessage = \"Copy to clipboard: #{key}, Enter\";\n\nfunction format(message) {\n  var copyKey = (/mac os x/i.test(navigator.userAgent) ? \"⌘\" : \"Ctrl\") + \"+C\";\n  return message.replace(/#{\\s*key\\s*}/g, copyKey);\n}\n\nfunction copy(text, options) {\n  var debug,\n    message,\n    reselectPrevious,\n    range,\n    selection,\n    mark,\n    success = false;\n  if (!options) {\n    options = {};\n  }\n  debug = options.debug || false;\n  try {\n    reselectPrevious = deselectCurrent();\n\n    range = document.createRange();\n    selection = document.getSelection();\n\n    mark = document.createElement(\"span\");\n    mark.textContent = text;\n    // avoid screen readers from reading out loud the text\n    mark.ariaHidden = \"true\"\n    // reset user styles for span element\n    mark.style.all = \"unset\";\n    // prevents scrolling to the end of the page\n    mark.style.position = \"fixed\";\n    mark.style.top = 0;\n    mark.style.clip = \"rect(0, 0, 0, 0)\";\n    // used to preserve spaces and line breaks\n    mark.style.whiteSpace = \"pre\";\n    // do not inherit user-select (it may be `none`)\n    mark.style.webkitUserSelect = \"text\";\n    mark.style.MozUserSelect = \"text\";\n    mark.style.msUserSelect = \"text\";\n    mark.style.userSelect = \"text\";\n    mark.addEventListener(\"copy\", function(e) {\n      e.stopPropagation();\n      if (options.format) {\n        e.preventDefault();\n        if (typeof e.clipboardData === \"undefined\") { // IE 11\n          debug && console.warn(\"unable to use e.clipboardData\");\n          debug && console.warn(\"trying IE specific stuff\");\n          window.clipboardData.clearData();\n          var format = clipboardToIE11Formatting[options.format] || clipboardToIE11Formatting[\"default\"]\n          window.clipboardData.setData(format, text);\n        } else { // all other browsers\n          e.clipboardData.clearData();\n          e.clipboardData.setData(options.format, text);\n        }\n      }\n      if (options.onCopy) {\n        e.preventDefault();\n        options.onCopy(e.clipboardData);\n      }\n    });\n\n    document.body.appendChild(mark);\n\n    range.selectNodeContents(mark);\n    selection.addRange(range);\n\n    var successful = document.execCommand(\"copy\");\n    if (!successful) {\n      throw new Error(\"copy command was unsuccessful\");\n    }\n    success = true;\n  } catch (err) {\n    debug && console.error(\"unable to copy using execCommand: \", err);\n    debug && console.warn(\"trying IE specific stuff\");\n    try {\n      window.clipboardData.setData(options.format || \"text\", text);\n      options.onCopy && options.onCopy(window.clipboardData);\n      success = true;\n    } catch (err) {\n      debug && console.error(\"unable to copy using clipboardData: \", err);\n      debug && console.error(\"falling back to prompt\");\n      message = format(\"message\" in options ? options.message : defaultMessage);\n      window.prompt(message, text);\n    }\n  } finally {\n    if (selection) {\n      if (typeof selection.removeRange == \"function\") {\n        selection.removeRange(range);\n      } else {\n        selection.removeAllRanges();\n      }\n    }\n\n    if (mark) {\n      document.body.removeChild(mark);\n    }\n    reselectPrevious();\n  }\n\n  return success;\n}\n\nmodule.exports = copy;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm-2 14l-4-4 1.41-1.41L10 14.17l6.59-6.59L18 9l-8 8z\"\n}), 'AssignmentTurnedIn');\n\nexports.default = _default;","\nmodule.exports = function () {\n  var selection = document.getSelection();\n  if (!selection.rangeCount) {\n    return function () {};\n  }\n  var active = document.activeElement;\n\n  var ranges = [];\n  for (var i = 0; i < selection.rangeCount; i++) {\n    ranges.push(selection.getRangeAt(i));\n  }\n\n  switch (active.tagName.toUpperCase()) { // .toUpperCase handles XHTML\n    case 'INPUT':\n    case 'TEXTAREA':\n      active.blur();\n      break;\n\n    default:\n      active = null;\n      break;\n  }\n\n  selection.removeAllRanges();\n  return function () {\n    selection.type === 'Caret' &&\n    selection.removeAllRanges();\n\n    if (!selection.rangeCount) {\n      ranges.forEach(function(range) {\n        selection.addRange(range);\n      });\n    }\n\n    active &&\n    active.focus();\n  };\n};\n","import { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n    result: {\n        fontFamily: 'monospace',\n        height: 'auto',\n    },\n}));\n\ninterface Props {\n    label?: string;\n    result?: string;\n    rows?: number;\n    maxRows?: number;\n}\n\nexport const ResultMonospace = ({ label, result, rows = 10, maxRows = 15 }: Props) => {\n    const classes = useStyles();\n\n    return (\n        <TextField\n            multiline\n            minRows={rows}\n            maxRows={maxRows}\n            label={label}\n            variant=\"outlined\"\n            margin=\"normal\"\n            fullWidth={true}\n            value={result}\n            InputProps={{\n                classes: {\n                    input: classes.result,\n                },\n            }}\n        />\n    );\n};\n\nexport default ResultMonospace;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport Input from '../Input';\nimport FilledInput from '../FilledInput';\nimport OutlinedInput from '../OutlinedInput';\nimport InputLabel from '../InputLabel';\nimport FormControl from '../FormControl';\nimport FormHelperText from '../FormHelperText';\nimport Select from '../Select';\nimport withStyles from '../styles/withStyles';\nvar variantComponent = {\n  standard: Input,\n  filled: FilledInput,\n  outlined: OutlinedInput\n};\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {}\n};\n/**\n * The `TextField` is a convenience wrapper for the most common cases (80%).\n * It cannot be all things to all people, otherwise the API would grow out of control.\n *\n * ## Advanced Configuration\n *\n * It's important to understand that the text field is a simple abstraction\n * on top of the following components:\n *\n * - [FormControl](/api/form-control/)\n * - [InputLabel](/api/input-label/)\n * - [FilledInput](/api/filled-input/)\n * - [OutlinedInput](/api/outlined-input/)\n * - [Input](/api/input/)\n * - [FormHelperText](/api/form-helper-text/)\n *\n * If you wish to alter the props applied to the `input` element, you can do so as follows:\n *\n * ```jsx\n * const inputProps = {\n *   step: 300,\n * };\n *\n * return <TextField id=\"time\" type=\"time\" inputProps={inputProps} />;\n * ```\n *\n * For advanced cases, please look at the source of TextField by clicking on the\n * \"Edit this page\" button above. Consider either:\n *\n * - using the upper case props for passing values directly to the components\n * - using the underlying components directly as shown in the demos\n */\n\nvar TextField = /*#__PURE__*/React.forwardRef(function TextField(props, ref) {\n  var autoComplete = props.autoComplete,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      defaultValue = props.defaultValue,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      FormHelperTextProps = props.FormHelperTextProps,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      helperText = props.helperText,\n      hiddenLabel = props.hiddenLabel,\n      id = props.id,\n      InputLabelProps = props.InputLabelProps,\n      inputProps = props.inputProps,\n      InputProps = props.InputProps,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      placeholder = props.placeholder,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      rows = props.rows,\n      rowsMax = props.rowsMax,\n      maxRows = props.maxRows,\n      minRows = props.minRows,\n      _props$select = props.select,\n      select = _props$select === void 0 ? false : _props$select,\n      SelectProps = props.SelectProps,\n      type = props.type,\n      value = props.value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoFocus\", \"children\", \"classes\", \"className\", \"color\", \"defaultValue\", \"disabled\", \"error\", \"FormHelperTextProps\", \"fullWidth\", \"helperText\", \"hiddenLabel\", \"id\", \"InputLabelProps\", \"inputProps\", \"InputProps\", \"inputRef\", \"label\", \"multiline\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"placeholder\", \"required\", \"rows\", \"rowsMax\", \"maxRows\", \"minRows\", \"select\", \"SelectProps\", \"type\", \"value\", \"variant\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (select && !children) {\n      console.error('Material-UI: `children` must be passed when using the `TextField` component with `select`.');\n    }\n  }\n\n  var InputMore = {};\n\n  if (variant === 'outlined') {\n    if (InputLabelProps && typeof InputLabelProps.shrink !== 'undefined') {\n      InputMore.notched = InputLabelProps.shrink;\n    }\n\n    if (label) {\n      var _InputLabelProps$requ;\n\n      var displayRequired = (_InputLabelProps$requ = InputLabelProps === null || InputLabelProps === void 0 ? void 0 : InputLabelProps.required) !== null && _InputLabelProps$requ !== void 0 ? _InputLabelProps$requ : required;\n      InputMore.label = /*#__PURE__*/React.createElement(React.Fragment, null, label, displayRequired && \"\\xA0*\");\n    }\n  }\n\n  if (select) {\n    // unset defaults from textbox inputs\n    if (!SelectProps || !SelectProps.native) {\n      InputMore.id = undefined;\n    }\n\n    InputMore['aria-describedby'] = undefined;\n  }\n\n  var helperTextId = helperText && id ? \"\".concat(id, \"-helper-text\") : undefined;\n  var inputLabelId = label && id ? \"\".concat(id, \"-label\") : undefined;\n  var InputComponent = variantComponent[variant];\n  var InputElement = /*#__PURE__*/React.createElement(InputComponent, _extends({\n    \"aria-describedby\": helperTextId,\n    autoComplete: autoComplete,\n    autoFocus: autoFocus,\n    defaultValue: defaultValue,\n    fullWidth: fullWidth,\n    multiline: multiline,\n    name: name,\n    rows: rows,\n    rowsMax: rowsMax,\n    maxRows: maxRows,\n    minRows: minRows,\n    type: type,\n    value: value,\n    id: id,\n    inputRef: inputRef,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: placeholder,\n    inputProps: inputProps\n  }, InputMore, InputProps));\n  return /*#__PURE__*/React.createElement(FormControl, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    error: error,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    ref: ref,\n    required: required,\n    color: color,\n    variant: variant\n  }, other), label && /*#__PURE__*/React.createElement(InputLabel, _extends({\n    htmlFor: id,\n    id: inputLabelId\n  }, InputLabelProps), label), select ? /*#__PURE__*/React.createElement(Select, _extends({\n    \"aria-describedby\": helperTextId,\n    id: id,\n    labelId: inputLabelId,\n    value: value,\n    input: InputElement\n  }, SelectProps), children) : InputElement, helperText && /*#__PURE__*/React.createElement(FormHelperText, _extends({\n    id: helperTextId\n  }, FormHelperTextProps), helperText));\n});\nprocess.env.NODE_ENV !== \"production\" ? TextField.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * This prop helps users to fill forms faster, especially on mobile devices.\n   * The name can be confusing, as it's more like an autofill.\n   * You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).\n   */\n  autoComplete: PropTypes.string,\n\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The default value of the `input` element.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the `input` element will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * Props applied to the [`FormHelperText`](/api/form-helper-text/) element.\n   */\n  FormHelperTextProps: PropTypes.object,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The helper text content.\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * The id of the `input` element.\n   * Use this prop to make `label` and `helperText` accessible for screen readers.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Props applied to the [`InputLabel`](/api/input-label/) element.\n   */\n  InputLabelProps: PropTypes.object,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Props applied to the Input element.\n   * It will be a [`FilledInput`](/api/filled-input/),\n   * [`OutlinedInput`](/api/outlined-input/) or [`Input`](/api/input/)\n   * component depending on the `variant` prop value.\n   */\n  InputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The label content.\n   */\n  label: PropTypes.node,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * Maximum number of rows to display when multiline option is set to true.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Minimum number of rows to display.\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * If `true`, a textarea element will be rendered instead of an input.\n   */\n  multiline: PropTypes.bool,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the value is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The short hint displayed in the input before the user enters a value.\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * If `true`, the label is displayed as required and the `input` element` will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * Number of rows to display when multiline option is set to true.\n   * @deprecated Use `minRows` instead.\n   */\n  rows: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'Use `minRows` instead'),\n\n  /**\n   * Maximum number of rows to display.\n   * @deprecated Use `maxRows` instead.\n   */\n  rowsMax: deprecatedPropType(PropTypes.oneOfType([PropTypes.number, PropTypes.string]), 'Use `maxRows` instead'),\n\n  /**\n   * Render a [`Select`](/api/select/) element while passing the Input element to `Select` as `input` parameter.\n   * If this option is set you must pass the options of the select as children.\n   */\n  select: PropTypes.bool,\n\n  /**\n   * Props applied to the [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the `input` element, required for a controlled component.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTextField'\n})(TextField);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = /*#__PURE__*/React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ?\n  /*#__PURE__*/\n  // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);"],"sourceRoot":""}